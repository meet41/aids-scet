{"ast":null,"code":"import { forwardRef, useMemo } from 'react';\nimport { bool } from 'prop-types';\nimport { jsx } from 'react/jsx-runtime';\nimport { defineName } from '../utils/utils.js';\nimport { stylePropTypes } from '../utils/propTypes.js';\nimport { useBEM } from '../hooks/useBEM.js';\nimport { menuButtonClass } from '../utils/constants.js';\nconst MenuButton = /*#__PURE__*/defineName('MenuButton', /*#__PURE__*/forwardRef(function MenuButton({\n  className,\n  isOpen,\n  disabled,\n  children,\n  ...restProps\n}, ref) {\n  const modifiers = useMemo(() => ({\n    open: isOpen\n  }), [isOpen]);\n  return /*#__PURE__*/jsx(\"button\", {\n    \"aria-haspopup\": true,\n    \"aria-expanded\": isOpen,\n    \"aria-disabled\": disabled || undefined,\n    type: \"button\",\n    disabled: disabled,\n    ...restProps,\n    ref: ref,\n    className: useBEM({\n      block: menuButtonClass,\n      modifiers,\n      className\n    }),\n    children: children\n  });\n}));\nprocess.env.NODE_ENV !== \"production\" ? MenuButton.propTypes = {\n  ...stylePropTypes(),\n  isOpen: bool,\n  disabled: bool\n} : void 0;\nexport { MenuButton };","map":{"version":3,"names":["forwardRef","useMemo","bool","jsx","defineName","stylePropTypes","useBEM","menuButtonClass","MenuButton","className","isOpen","disabled","children","restProps","ref","modifiers","open","undefined","type","block","process","env","NODE_ENV","propTypes"],"sources":["E:/HTML/Udemy_Full Stack Web/AI-SCET Website/aiscet/node_modules/@szhsin/react-menu/dist/es/components/MenuButton.js"],"sourcesContent":["import { forwardRef, useMemo } from 'react';\nimport { bool } from 'prop-types';\nimport { jsx } from 'react/jsx-runtime';\nimport { defineName } from '../utils/utils.js';\nimport { stylePropTypes } from '../utils/propTypes.js';\nimport { useBEM } from '../hooks/useBEM.js';\nimport { menuButtonClass } from '../utils/constants.js';\n\nconst MenuButton = /*#__PURE__*/defineName('MenuButton', /*#__PURE__*/forwardRef(function MenuButton({\n  className,\n  isOpen,\n  disabled,\n  children,\n  ...restProps\n}, ref) {\n  const modifiers = useMemo(() => ({\n    open: isOpen\n  }), [isOpen]);\n  return /*#__PURE__*/jsx(\"button\", {\n    \"aria-haspopup\": true,\n    \"aria-expanded\": isOpen,\n    \"aria-disabled\": disabled || undefined,\n    type: \"button\",\n    disabled: disabled,\n    ...restProps,\n    ref: ref,\n    className: useBEM({\n      block: menuButtonClass,\n      modifiers,\n      className\n    }),\n    children: children\n  });\n}));\nprocess.env.NODE_ENV !== \"production\" ? MenuButton.propTypes = {\n  ...stylePropTypes(),\n  isOpen: bool,\n  disabled: bool\n} : void 0;\n\nexport { MenuButton };\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,YAAY;AACjC,SAASC,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,eAAe,QAAQ,uBAAuB;AAEvD,MAAMC,UAAU,GAAG,aAAaJ,UAAU,CAAC,YAAY,EAAE,aAAaJ,UAAU,CAAC,SAASQ,UAAUA,CAAC;EACnGC,SAAS;EACTC,MAAM;EACNC,QAAQ;EACRC,QAAQ;EACR,GAAGC;AACL,CAAC,EAAEC,GAAG,EAAE;EACN,MAAMC,SAAS,GAAGd,OAAO,CAAC,OAAO;IAC/Be,IAAI,EAAEN;EACR,CAAC,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EACb,OAAO,aAAaP,GAAG,CAAC,QAAQ,EAAE;IAChC,eAAe,EAAE,IAAI;IACrB,eAAe,EAAEO,MAAM;IACvB,eAAe,EAAEC,QAAQ,IAAIM,SAAS;IACtCC,IAAI,EAAE,QAAQ;IACdP,QAAQ,EAAEA,QAAQ;IAClB,GAAGE,SAAS;IACZC,GAAG,EAAEA,GAAG;IACRL,SAAS,EAAEH,MAAM,CAAC;MAChBa,KAAK,EAAEZ,eAAe;MACtBQ,SAAS;MACTN;IACF,CAAC,CAAC;IACFG,QAAQ,EAAEA;EACZ,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AACHQ,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGd,UAAU,CAACe,SAAS,GAAG;EAC7D,GAAGlB,cAAc,CAAC,CAAC;EACnBK,MAAM,EAAER,IAAI;EACZS,QAAQ,EAAET;AACZ,CAAC,GAAG,KAAK,CAAC;AAEV,SAASM,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}