{"ast":null,"code":"/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev.js';\n/**\n * A secret token that must be passed to safe type constructors. It is only\n * accessible from within safevalues, ensuring that unrestricted safe type\n * creation is only possible within safevalues. In particular, this prevents\n * forgery such as `safeHtmlValue.constructor('javascript:evil')`.\n */\nexport const secretToken = {};\n/**\n * Asserts that the given token matches the secret safevalues token. An\n * exception is thrown if that is not the case.\n */\nexport function ensureTokenIsValid(token) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (token !== secretToken) {\n      throw new Error('Bad secret');\n    }\n  }\n}","map":{"version":3,"names":["secretToken","ensureTokenIsValid","token","process","env","NODE_ENV","Error"],"sources":["E:/HTML/Udemy_Full Stack Web/AI-SCET Website/aiscet/node_modules/safevalues/dist/mjs/internals/secrets.js"],"sourcesContent":["/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev.js';\n/**\n * A secret token that must be passed to safe type constructors. It is only\n * accessible from within safevalues, ensuring that unrestricted safe type\n * creation is only possible within safevalues. In particular, this prevents\n * forgery such as `safeHtmlValue.constructor('javascript:evil')`.\n */\nexport const secretToken = {};\n/**\n * Asserts that the given token matches the secret safevalues token. An\n * exception is thrown if that is not the case.\n */\nexport function ensureTokenIsValid(token) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (token !== secretToken) {\n            throw new Error('Bad secret');\n        }\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,uBAAuB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,WAAW,GAAG,CAAC,CAAC;AAC7B;AACA;AACA;AACA;AACA,OAAO,SAASC,kBAAkBA,CAACC,KAAK,EAAE;EACtC,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACvC,IAAIH,KAAK,KAAKF,WAAW,EAAE;MACvB,MAAM,IAAIM,KAAK,CAAC,YAAY,CAAC;IACjC;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}