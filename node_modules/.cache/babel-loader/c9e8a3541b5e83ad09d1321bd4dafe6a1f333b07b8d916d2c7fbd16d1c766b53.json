{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\AI-SCET Website\\\\aiscet\\\\src\\\\components\\\\AddResult.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { getDatabase, ref, push } from 'firebase/database';\n// import { useNavigate } from 'react-router-dom';\n// import { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\n\n// function AddResult() {\n//   const [type, setType] = useState('');\n//   const [year, setYear] = useState('');\n//   const [semester, setSemester] = useState('');\n//   const [classname, setClassname] = useState('');\n//   const [schedulePdf, setSchedulePdf] = useState(null);\n//   const [seatingPdf, setSeatingPdf] = useState(null);\n//   const [resultPdf, setResultPdf] = useState(null);\n//   const navigate = useNavigate();\n\n//   const handleFileChange = (e, setFile) => {\n//     setFile(e.target.files[0]);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const db = getDatabase();\n//     const storage = getStorage();\n\n//     const uploadFile = async (file) => {\n//       if (file) {\n//         const fileRef = storageRef(storage, `results/${file.name}`);\n//         await uploadBytes(fileRef, file);\n//         return getDownloadURL(fileRef);\n//       }\n//       return null;\n//     };\n\n//     const schedulePdfUrl = await uploadFile(schedulePdf);\n//     const seatingPdfUrl = await uploadFile(seatingPdf);\n//     const resultPdfUrl = await uploadFile(resultPdf);\n\n//     const resultData = {\n//       type,\n//       year,\n//       semester,\n//       classname,\n//       schedulePdfUrl,\n//       seatingPdfUrl,\n//       resultPdfUrl,\n//     };\n\n//     const resultsRef = ref(db, 'results');\n//     await push(resultsRef, resultData);\n\n//     // Reset the form\n//     setType('');\n//     setYear('');\n//     setSemester('');\n//     setClassname('');\n//     setSchedulePdf(null);\n//     setSeatingPdf(null);\n//     setResultPdf(null);\n//     navigate('/results');\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <div>\n//         <label>Type:</label>\n//         <input type=\"text\" value={type} onChange={(e) => setType(e.target.value)} required />\n//       </div>\n//       <div>\n//         <label>Year:</label>\n//         <input type=\"text\" value={year} onChange={(e) => setYear(e.target.value)} required />\n//       </div>\n//       <div>\n//         <label>Semester:</label>\n//         <input type=\"text\" value={semester} onChange={(e) => setSemester(e.target.value)} required />\n//       </div>\n//       <div>\n//         <label>Classname:</label>\n//         <input type=\"text\" value={classname} onChange={(e) => setClassname(e.target.value)} required />\n//       </div>\n//       <div>\n//         <label>Schedule PDF:</label>\n//         <input type=\"file\" onChange={(e) => handleFileChange(e, setSchedulePdf)} />\n//       </div>\n//       <div>\n//         <label>Seating PDF:</label>\n//         <input type=\"file\" onChange={(e) => handleFileChange(e, setSeatingPdf)} />\n//       </div>\n//       <div>\n//         <label>Result PDF:</label>\n//         <input type=\"file\" onChange={(e) => handleFileChange(e, setResultPdf)} />\n//       </div>\n//       <button type=\"submit\">Add Result</button>\n//     </form>\n//   );\n// }\n\n// export default AddResult;\n\nimport React, { useState } from 'react';\nimport { getDatabase, ref, push } from 'firebase/database';\nimport { useNavigate } from 'react-router-dom';\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport './AddResult.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddResult() {\n  _s();\n  const [type, setType] = useState('');\n  const [year, setYear] = useState('');\n  const [semester, setSemester] = useState('');\n  const [classname, setClassname] = useState('');\n  const [resultType, setResultType] = useState('');\n  const [resultSubType, setResultSubType] = useState('');\n  const [schedulePdf, setSchedulePdf] = useState(null);\n  const [seatingPdf, setSeatingPdf] = useState(null);\n  const [resultPdf, setResultPdf] = useState(null);\n  const navigate = useNavigate();\n  const handleFileChange = (e, setFile) => {\n    setFile(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const db = getDatabase();\n    const storage = getStorage();\n    const uploadFile = async file => {\n      if (file) {\n        const fileRef = storageRef(storage, `results/${file.name}`);\n        await uploadBytes(fileRef, file);\n        return getDownloadURL(fileRef);\n      }\n      return null;\n    };\n    const schedulePdfUrl = await uploadFile(schedulePdf);\n    const seatingPdfUrl = await uploadFile(seatingPdf);\n    const resultPdfUrl = await uploadFile(resultPdf);\n    const resultData = {\n      type,\n      year,\n      semester,\n      classname,\n      resultType,\n      resultSubType,\n      schedulePdfUrl,\n      seatingPdfUrl,\n      resultPdfUrl\n    };\n    const resultsRef = ref(db, 'results');\n    await push(resultsRef, resultData);\n\n    // Reset the form\n    setType('');\n    setYear('');\n    setSemester('');\n    setClassname('');\n    setResultType('');\n    setResultSubType('');\n    setSchedulePdf(null);\n    setSeatingPdf(null);\n    setResultPdf(null);\n    navigate('/results');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-result-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"add-result-header\",\n      children: \"Add New Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-result-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: type,\n          onChange: e => setType(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: year,\n          onChange: e => setYear(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Semester:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: semester,\n          onChange: e => setSemester(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Classname:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: classname,\n          onChange: e => setClassname(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Result Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: resultType,\n          onChange: e => setResultType(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Summer\",\n            children: \"Summer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Winter\",\n            children: \"Winter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Result Sub-Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: resultSubType,\n          onChange: e => setResultSubType(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Regular\",\n            children: \"Regular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Backlog\",\n            children: \"Backlog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Schedule PDF:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleFileChange(e, setSchedulePdf)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Seating PDF:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleFileChange(e, setSeatingPdf)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Result PDF:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => handleFileChange(e, setResultPdf)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(AddResult, \"lR5Vx33fQj9lbUAnbP8Idqxh9MY=\", false, function () {\n  return [useNavigate];\n});\n_c = AddResult;\nexport default AddResult;\nvar _c;\n$RefreshReg$(_c, \"AddResult\");","map":{"version":3,"names":["React","useState","getDatabase","ref","push","useNavigate","getStorage","storageRef","uploadBytes","getDownloadURL","jsxDEV","_jsxDEV","AddResult","_s","type","setType","year","setYear","semester","setSemester","classname","setClassname","resultType","setResultType","resultSubType","setResultSubType","schedulePdf","setSchedulePdf","seatingPdf","setSeatingPdf","resultPdf","setResultPdf","navigate","handleFileChange","e","setFile","target","files","handleSubmit","preventDefault","db","storage","uploadFile","file","fileRef","name","schedulePdfUrl","seatingPdfUrl","resultPdfUrl","resultData","resultsRef","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","required","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/AI-SCET Website/aiscet/src/components/AddResult.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { getDatabase, ref, push } from 'firebase/database';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\r\n\r\n// function AddResult() {\r\n//   const [type, setType] = useState('');\r\n//   const [year, setYear] = useState('');\r\n//   const [semester, setSemester] = useState('');\r\n//   const [classname, setClassname] = useState('');\r\n//   const [schedulePdf, setSchedulePdf] = useState(null);\r\n//   const [seatingPdf, setSeatingPdf] = useState(null);\r\n//   const [resultPdf, setResultPdf] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleFileChange = (e, setFile) => {\r\n//     setFile(e.target.files[0]);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const db = getDatabase();\r\n//     const storage = getStorage();\r\n\r\n//     const uploadFile = async (file) => {\r\n//       if (file) {\r\n//         const fileRef = storageRef(storage, `results/${file.name}`);\r\n//         await uploadBytes(fileRef, file);\r\n//         return getDownloadURL(fileRef);\r\n//       }\r\n//       return null;\r\n//     };\r\n\r\n//     const schedulePdfUrl = await uploadFile(schedulePdf);\r\n//     const seatingPdfUrl = await uploadFile(seatingPdf);\r\n//     const resultPdfUrl = await uploadFile(resultPdf);\r\n\r\n//     const resultData = {\r\n//       type,\r\n//       year,\r\n//       semester,\r\n//       classname,\r\n//       schedulePdfUrl,\r\n//       seatingPdfUrl,\r\n//       resultPdfUrl,\r\n//     };\r\n\r\n//     const resultsRef = ref(db, 'results');\r\n//     await push(resultsRef, resultData);\r\n\r\n//     // Reset the form\r\n//     setType('');\r\n//     setYear('');\r\n//     setSemester('');\r\n//     setClassname('');\r\n//     setSchedulePdf(null);\r\n//     setSeatingPdf(null);\r\n//     setResultPdf(null);\r\n//     navigate('/results');\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <div>\r\n//         <label>Type:</label>\r\n//         <input type=\"text\" value={type} onChange={(e) => setType(e.target.value)} required />\r\n//       </div>\r\n//       <div>\r\n//         <label>Year:</label>\r\n//         <input type=\"text\" value={year} onChange={(e) => setYear(e.target.value)} required />\r\n//       </div>\r\n//       <div>\r\n//         <label>Semester:</label>\r\n//         <input type=\"text\" value={semester} onChange={(e) => setSemester(e.target.value)} required />\r\n//       </div>\r\n//       <div>\r\n//         <label>Classname:</label>\r\n//         <input type=\"text\" value={classname} onChange={(e) => setClassname(e.target.value)} required />\r\n//       </div>\r\n//       <div>\r\n//         <label>Schedule PDF:</label>\r\n//         <input type=\"file\" onChange={(e) => handleFileChange(e, setSchedulePdf)} />\r\n//       </div>\r\n//       <div>\r\n//         <label>Seating PDF:</label>\r\n//         <input type=\"file\" onChange={(e) => handleFileChange(e, setSeatingPdf)} />\r\n//       </div>\r\n//       <div>\r\n//         <label>Result PDF:</label>\r\n//         <input type=\"file\" onChange={(e) => handleFileChange(e, setResultPdf)} />\r\n//       </div>\r\n//       <button type=\"submit\">Add Result</button>\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n// export default AddResult;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { getDatabase, ref, push } from 'firebase/database';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport './AddResult.css';\r\n\r\nfunction AddResult() {\r\n  const [type, setType] = useState('');\r\n  const [year, setYear] = useState('');\r\n  const [semester, setSemester] = useState('');\r\n  const [classname, setClassname] = useState('');\r\n  const [resultType, setResultType] = useState('');\r\n  const [resultSubType, setResultSubType] = useState('');\r\n  const [schedulePdf, setSchedulePdf] = useState(null);\r\n  const [seatingPdf, setSeatingPdf] = useState(null);\r\n  const [resultPdf, setResultPdf] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleFileChange = (e, setFile) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const db = getDatabase();\r\n    const storage = getStorage();\r\n\r\n    const uploadFile = async (file) => {\r\n      if (file) {\r\n        const fileRef = storageRef(storage, `results/${file.name}`);\r\n        await uploadBytes(fileRef, file);\r\n        return getDownloadURL(fileRef);\r\n      }\r\n      return null;\r\n    };\r\n\r\n    const schedulePdfUrl = await uploadFile(schedulePdf);\r\n    const seatingPdfUrl = await uploadFile(seatingPdf);\r\n    const resultPdfUrl = await uploadFile(resultPdf);\r\n\r\n    const resultData = {\r\n      type,\r\n      year,\r\n      semester,\r\n      classname,\r\n      resultType,\r\n      resultSubType,\r\n      schedulePdfUrl,\r\n      seatingPdfUrl,\r\n      resultPdfUrl,\r\n    };\r\n\r\n    const resultsRef = ref(db, 'results');\r\n    await push(resultsRef, resultData);\r\n\r\n    // Reset the form\r\n    setType('');\r\n    setYear('');\r\n    setSemester('');\r\n    setClassname('');\r\n    setResultType('');\r\n    setResultSubType('');\r\n    setSchedulePdf(null);\r\n    setSeatingPdf(null);\r\n    setResultPdf(null);\r\n    navigate('/results');\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-result-container\">\r\n      <h2 className=\"add-result-header\">Add New Result</h2>\r\n      <form className=\"add-result-form\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Type:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={type}\r\n            onChange={(e) => setType(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Year:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={year}\r\n            onChange={(e) => setYear(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Semester:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={semester}\r\n            onChange={(e) => setSemester(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Classname:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={classname}\r\n            onChange={(e) => setClassname(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Result Type:</label>\r\n          <select value={resultType} onChange={(e) => setResultType(e.target.value)} required>\r\n            <option value=\"\">Select</option>\r\n            <option value=\"Summer\">Summer</option>\r\n            <option value=\"Winter\">Winter</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label>Result Sub-Type:</label>\r\n          <select value={resultSubType} onChange={(e) => setResultSubType(e.target.value)} required>\r\n            <option value=\"\">Select</option>\r\n            <option value=\"Regular\">Regular</option>\r\n            <option value=\"Backlog\">Backlog</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label>Schedule PDF:</label>\r\n          <input type=\"file\" onChange={(e) => handleFileChange(e, setSchedulePdf)} />\r\n        </div>\r\n        <div>\r\n          <label>Seating PDF:</label>\r\n          <input type=\"file\" onChange={(e) => handleFileChange(e, setSeatingPdf)} />\r\n        </div>\r\n        <div>\r\n          <label>Result PDF:</label>\r\n          <input type=\"file\" onChange={(e) => handleFileChange(e, setResultPdf)} />\r\n        </div>\r\n        <button type=\"submit\">Add Result</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddResult;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}