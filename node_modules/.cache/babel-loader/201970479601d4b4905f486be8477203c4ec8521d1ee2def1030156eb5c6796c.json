{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\AI-SCET Website\\\\aiscet\\\\src\\\\components\\\\ImageUploader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { storage, ref, uploadBytes, getDownloadURL, listAll } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploader = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [fileList, setFileList] = useState([]);\n  useEffect(() => {\n    const fetchFiles = async () => {\n      const folderRef = ref(storage, 'your-folder-name'); // Replace 'your-folder-name' with your folder name\n      try {\n        const res = await listAll(folderRef);\n        const urls = await Promise.all(res.items.map(itemRef => getDownloadURL(itemRef)));\n        setFileList(urls);\n      } catch (error) {\n        console.error('Error fetching files:', error);\n      }\n    };\n    fetchFiles();\n  }, []);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setMessage('Uploading...');\n    const fileInput = event.target.elements.image;\n    const file = fileInput.files[0];\n    const storageRef = ref(storage, `your-folder-name/${file.name}`); // Replace 'your-folder-name' with your folder name\n\n    try {\n      await uploadBytes(storageRef, file);\n      const fileUrl = await getDownloadURL(storageRef);\n      setMessage(`Upload successful! File URL: ${fileUrl}`);\n      setFileList(prevList => [...prevList, fileUrl]);\n    } catch (error) {\n      setMessage(`Upload failed: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Uploaded Files:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: fileList.map((url, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 27\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploader, \"7a2EOOCkqYa/lW/1eWS2sdJ/I4E=\");\n_c = ImageUploader;\nexport default ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");","map":{"version":3,"names":["React","useState","useEffect","storage","ref","uploadBytes","getDownloadURL","listAll","jsxDEV","_jsxDEV","ImageUploader","_s","message","setMessage","fileList","setFileList","fetchFiles","folderRef","res","urls","Promise","all","items","map","itemRef","error","console","handleSubmit","event","preventDefault","fileInput","target","elements","image","file","files","storageRef","name","fileUrl","prevList","children","onSubmit","type","fileName","_jsxFileName","lineNumber","columnNumber","url","index","href","rel","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/AI-SCET Website/aiscet/src/components/ImageUploader.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { storage, ref, uploadBytes, getDownloadURL, listAll } from '../firebase';\r\n\r\nconst ImageUploader = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchFiles = async () => {\r\n      const folderRef = ref(storage, 'your-folder-name'); // Replace 'your-folder-name' with your folder name\r\n      try {\r\n        const res = await listAll(folderRef);\r\n        const urls = await Promise.all(res.items.map(itemRef => getDownloadURL(itemRef)));\r\n        setFileList(urls);\r\n      } catch (error) {\r\n        console.error('Error fetching files:', error);\r\n      }\r\n    };\r\n\r\n    fetchFiles();\r\n  }, []);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setMessage('Uploading...');\r\n\r\n    const fileInput = event.target.elements.image;\r\n    const file = fileInput.files[0];\r\n    const storageRef = ref(storage, `your-folder-name/${file.name}`); // Replace 'your-folder-name' with your folder name\r\n\r\n    try {\r\n      await uploadBytes(storageRef, file);\r\n      const fileUrl = await getDownloadURL(storageRef);\r\n      setMessage(`Upload successful! File URL: ${fileUrl}`);\r\n      setFileList(prevList => [...prevList, fileUrl]);\r\n    } catch (error) {\r\n      setMessage(`Upload failed: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"file\" name=\"image\" />\r\n        <button type=\"submit\">Upload</button>\r\n        <p>{message}</p>\r\n      </form>\r\n      <h3>Uploaded Files:</h3>\r\n      <ul>\r\n        {fileList.map((url, index) => (\r\n          <li key={index}><a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{url}</a></li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}