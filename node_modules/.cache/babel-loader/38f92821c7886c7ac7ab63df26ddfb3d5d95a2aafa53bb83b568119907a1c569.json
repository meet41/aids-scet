{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\AI-SCET Website\\\\aiscet\\\\src\\\\components\\\\Register.jsx\",\n  _s = $RefreshSig$();\n// // RegisterForm.js\n\n// import React from 'react';\n// import { useForm } from 'react-hook-form';\n\n// const Register = () => {\n//   const { register, handleSubmit, formState: { errors } } = useForm();\n\n//   const onSubmit = (data) => {\n//     console.log(data); // Replace with your logic to handle form submission (e.g., API call)\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit(onSubmit)}>\n//       <h2>Register</h2>\n//       <div>\n//         <label>Email</label>\n//         <input\n//           type=\"email\"\n//           {...register('email', {\n//             required: 'Email is required',\n//             pattern: {\n//               value: /^[a-zA-Z0-9._%+-]+@example\\.com$/,\n//               message: 'Invalid email address',\n//             },\n//           })}\n//         />\n//         {errors.email && <p>{errors.email.message}</p>}\n//       </div>\n//       <div>\n//         <label>Password</label>\n//         <input\n//           type=\"password\"\n//           {...register('password', { required: 'Password is required' })}\n//         />\n//         {errors.password && <p>{errors.password.message}</p>}\n//       </div>\n//       <div>\n//         <label>Confirm Password</label>\n//         <input\n//           type=\"password\"\n//           {...register('confirmPassword', {\n//             validate: (value) => value === password || 'The passwords do not match',\n//           })}\n//         />\n//         {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\n//       </div>\n//       <button type=\"submit\">Register</button>\n//     </form>\n//   );\n// };\n\n// export default Register;\n\n// import React from 'react';\n// import { useForm } from 'react-hook-form';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Register = () => {\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n//   const navigate = useNavigate();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\"http://localhost:3000/register\", data);\n//       if (response.data.success) {\n//         navigate('/login');\n//       }\n//     } catch (error) {\n//       console.error(\"Error registering\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"register-container\">\n//       <form onSubmit={handleSubmit(onSubmit)} className=\"register-form\">\n//         <h2>Register</h2>\n//         <div>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             {...register(\"name\", { required: \"Name is required\" })}\n//           />\n//           {errors.name && <p>{errors.name.message}</p>}\n//         </div>\n//         <div>\n//           <label>Email</label>\n//           <input\n//             type=\"email\"\n//             {...register(\"email\", {\n//               required: \"Email is required\",\n//               pattern: {\n//                 value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\n//                 message: \"Email must end with @scet.ac.in\",\n//               },\n//             })}\n//           />\n//           {errors.email && <p>{errors.email.message}</p>}\n//         </div>\n//         <div>\n//           <label>Password</label>\n//           <input\n//             type=\"password\"\n//             {...register(\"password\", { required: \"Password is required\" })}\n//           />\n//           {errors.password && <p>{errors.password.message}</p>}\n//         </div>\n//         <button type=\"submit\">Register</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Register;\n\n// import React from 'react';\n// import { useForm } from 'react-hook-form';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Register = () => {\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n//   const navigate = useNavigate();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\"http://localhost:3000/register\", data);\n//       if (response.data.success) {\n//         navigate('/login');\n//       } else {\n//         console.error(\"Registration failed:\", response.data.message);\n//       }\n//     } catch (error) {\n//       console.error(\"Error registering\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"register-container\">\n//       <form onSubmit={handleSubmit(onSubmit)} className=\"register-form\">\n//         <h2>Register</h2>\n//         <div>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             {...register(\"name\", { required: \"Name is required\" })}\n//           />\n//           {errors.name && <p>{errors.name.message}</p>}\n//         </div>\n//         <div>\n//           <label>Email</label>\n//           <input\n//             type=\"email\"\n//             {...register(\"email\", {\n//               required: \"Email is required\",\n//               pattern: {\n//                 value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\n//                 message: \"Email must end with @scet.ac.in\",\n//               },\n//             })}\n//           />\n//           {errors.email && <p>{errors.email.message}</p>}\n//         </div>\n//         <div>\n//           <label>Password</label>\n//           <input\n//             type=\"password\"\n//             {...register(\"password\", { required: \"Password is required\" })}\n//           />\n//           {errors.password && <p>{errors.password.message}</p>}\n//         </div>\n//         <button type=\"submit\">Register</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Register;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// function Register() {\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const response = await fetch('/register', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ name, email, password })\n//     });\n//     if (response.ok) {\n//       navigate('/login');\n//     } else {\n//       alert('Registration failed');\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <div>\n//         <label>Name:</label>\n//         <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required />\n//       </div>\n//       <div>\n//         <label>Email:</label>\n//         <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n//       </div>\n//       <div>\n//         <label>Password:</label>\n//         <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n//       </div>\n//       <button type=\"submit\">Register</button>\n//     </form>\n//   );\n// }\n\n// export default Register;\n\nimport React, { useState } from 'react';\nimport { registerUser } from '../auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const handleRegister = async () => {\n    try {\n      await registerUser(email, password);\n      setError(null);\n      // Redirect to a protected route or home page\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"dpow0WXxoqygQZ0E6GERh5+vph4=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","registerUser","jsxDEV","_jsxDEV","Register","_s","email","setEmail","password","setPassword","error","setError","handleRegister","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","style","color","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/AI-SCET Website/aiscet/src/components/Register.jsx"],"sourcesContent":["// // RegisterForm.js\r\n\r\n// import React from 'react';\r\n// import { useForm } from 'react-hook-form';\r\n\r\n// const Register = () => {\r\n//   const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n//   const onSubmit = (data) => {\r\n//     console.log(data); // Replace with your logic to handle form submission (e.g., API call)\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit(onSubmit)}>\r\n//       <h2>Register</h2>\r\n//       <div>\r\n//         <label>Email</label>\r\n//         <input\r\n//           type=\"email\"\r\n//           {...register('email', {\r\n//             required: 'Email is required',\r\n//             pattern: {\r\n//               value: /^[a-zA-Z0-9._%+-]+@example\\.com$/,\r\n//               message: 'Invalid email address',\r\n//             },\r\n//           })}\r\n//         />\r\n//         {errors.email && <p>{errors.email.message}</p>}\r\n//       </div>\r\n//       <div>\r\n//         <label>Password</label>\r\n//         <input\r\n//           type=\"password\"\r\n//           {...register('password', { required: 'Password is required' })}\r\n//         />\r\n//         {errors.password && <p>{errors.password.message}</p>}\r\n//       </div>\r\n//       <div>\r\n//         <label>Confirm Password</label>\r\n//         <input\r\n//           type=\"password\"\r\n//           {...register('confirmPassword', {\r\n//             validate: (value) => value === password || 'The passwords do not match',\r\n//           })}\r\n//         />\r\n//         {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\r\n//       </div>\r\n//       <button type=\"submit\">Register</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n// import React from 'react';\r\n// import { useForm } from 'react-hook-form';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Register = () => {\r\n//   const {\r\n//     register,\r\n//     handleSubmit,\r\n//     formState: { errors },\r\n//   } = useForm();\r\n//   const navigate = useNavigate();\r\n\r\n//   const onSubmit = async (data) => {\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:3000/register\", data);\r\n//       if (response.data.success) {\r\n//         navigate('/login');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error registering\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"register-container\">\r\n//       <form onSubmit={handleSubmit(onSubmit)} className=\"register-form\">\r\n//         <h2>Register</h2>\r\n//         <div>\r\n//           <label>Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             {...register(\"name\", { required: \"Name is required\" })}\r\n//           />\r\n//           {errors.name && <p>{errors.name.message}</p>}\r\n//         </div>\r\n//         <div>\r\n//           <label>Email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             {...register(\"email\", {\r\n//               required: \"Email is required\",\r\n//               pattern: {\r\n//                 value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\r\n//                 message: \"Email must end with @scet.ac.in\",\r\n//               },\r\n//             })}\r\n//           />\r\n//           {errors.email && <p>{errors.email.message}</p>}\r\n//         </div>\r\n//         <div>\r\n//           <label>Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             {...register(\"password\", { required: \"Password is required\" })}\r\n//           />\r\n//           {errors.password && <p>{errors.password.message}</p>}\r\n//         </div>\r\n//         <button type=\"submit\">Register</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n\r\n// import React from 'react';\r\n// import { useForm } from 'react-hook-form';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Register = () => {\r\n//   const {\r\n//     register,\r\n//     handleSubmit,\r\n//     formState: { errors },\r\n//   } = useForm();\r\n//   const navigate = useNavigate();\r\n\r\n//   const onSubmit = async (data) => {\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:3000/register\", data);\r\n//       if (response.data.success) {\r\n//         navigate('/login');\r\n//       } else {\r\n//         console.error(\"Registration failed:\", response.data.message);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error registering\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"register-container\">\r\n//       <form onSubmit={handleSubmit(onSubmit)} className=\"register-form\">\r\n//         <h2>Register</h2>\r\n//         <div>\r\n//           <label>Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             {...register(\"name\", { required: \"Name is required\" })}\r\n//           />\r\n//           {errors.name && <p>{errors.name.message}</p>}\r\n//         </div>\r\n//         <div>\r\n//           <label>Email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             {...register(\"email\", {\r\n//               required: \"Email is required\",\r\n//               pattern: {\r\n//                 value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\r\n//                 message: \"Email must end with @scet.ac.in\",\r\n//               },\r\n//             })}\r\n//           />\r\n//           {errors.email && <p>{errors.email.message}</p>}\r\n//         </div>\r\n//         <div>\r\n//           <label>Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             {...register(\"password\", { required: \"Password is required\" })}\r\n//           />\r\n//           {errors.password && <p>{errors.password.message}</p>}\r\n//         </div>\r\n//         <button type=\"submit\">Register</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// function Register() {\r\n//   const [name, setName] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const response = await fetch('/register', {\r\n//       method: 'POST',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify({ name, email, password })\r\n//     });\r\n//     if (response.ok) {\r\n//       navigate('/login');\r\n//     } else {\r\n//       alert('Registration failed');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <div>\r\n//         <label>Name:</label>\r\n//         <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n//       </div>\r\n//       <div>\r\n//         <label>Email:</label>\r\n//         <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n//       </div>\r\n//       <div>\r\n//         <label>Password:</label>\r\n//         <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n//       </div>\r\n//       <button type=\"submit\">Register</button>\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n// export default Register;\r\n\r\nimport React, { useState } from 'react';\r\nimport { registerUser } from '../auth';\r\n\r\nfunction Register() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      await registerUser(email, password);\r\n      setError(null);\r\n      // Redirect to a protected route or home page\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Register</h2>\r\n      <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" />\r\n      <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" />\r\n      <button onClick={handleRegister}>Register</button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMX,YAAY,CAACK,KAAK,EAAEE,QAAQ,CAAC;MACnCG,QAAQ,CAAC,IAAI,CAAC;MACd;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACG,OAAO,CAAC;IACzB;EACF,CAAC;EAED,oBACEV,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBf,OAAA;MAAOgB,IAAI,EAAC,OAAO;MAACC,KAAK,EAAEd,KAAM;MAACe,QAAQ,EAAGC,CAAC,IAAKf,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAO;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnGf,OAAA;MAAOgB,IAAI,EAAC,UAAU;MAACC,KAAK,EAAEZ,QAAS;MAACa,QAAQ,EAAGC,CAAC,IAAKb,WAAW,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAU;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/Gf,OAAA;MAAQsB,OAAO,EAAEb,cAAe;MAAAE,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACjDR,KAAK,iBAAIP,OAAA;MAAGuB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAb,QAAA,EAAEJ;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV;AAACb,EAAA,CAxBQD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA0BjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}