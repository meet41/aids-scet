{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\AI-SCET Website\\\\aiscet\\\\src\\\\auth\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\n// import axios from 'axios';\n// import \"./Login.css\";\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n//   const navigate = useNavigate();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\"http://localhost:3000/auth/login\", data);\n//       if (response.data.success) {\n//         // Handle successful login\n//         sessionStorage.setItem('user', JSON.stringify(response.data.user));\n//         navigate('/manage');\n//       } else {\n//         // Redirect to register page if user does not exist\n//         navigate('/register');\n//       }\n//     } catch (error) {\n//       console.error(\"Error logging in\", error);\n//     }\n//   };\n\n//   const handleGoogleSuccess = async (response) => {\n//     try {\n//       const googleData = { token: response.credential };\n//       const result = await axios.post(\"http://localhost:3000/google-login\", googleData);\n//       if (result.data.success) {\n//         // Handle successful login\n//         sessionStorage.setItem('user', JSON.stringify(result.data.user));\n//         navigate('/manage');\n//       } else {\n//         // Redirect to register page if user does not exist\n//         navigate('/register');\n//       }\n//     } catch (error) {\n//       console.error(\"Google login error\", error);\n//     }\n//   };\n\n//   const handleGoogleFailure = (error) => {\n//     console.error(\"Google login failed\", error);\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <form onSubmit={handleSubmit(onSubmit)} className=\"login-form\">\n//         <h2>Login</h2>\n//         <div>\n//           <label>Email</label>\n//           <input\n//             type=\"email\"\n//             {...register(\"email\", {\n//               required: \"Email is required\",\n//               pattern: {\n//                 value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\n//                 message: \"Email must end with @scet.ac.in\",\n//               },\n//             })}\n//           />\n//           {errors.email && <p>{errors.email.message}</p>}\n//         </div>\n//         <div>\n//           <label>Password</label>\n//           <input\n//             type=\"password\"\n//             {...register(\"password\", { required: \"Password is required\" })}\n//           />\n//           {errors.password && <p>{errors.password.message}</p>}\n//         </div>\n//         <button type=\"submit\">Login</button>\n//         <GoogleOAuthProvider clientId=\"313031444121-odnvb0dj5sfju6rovi1i6jbsl12o50la.apps.googleusercontent.com\">\n//           <GoogleLogin\n//             onSuccess={handleGoogleSuccess}\n//             onFailure={handleGoogleFailure}\n//             buttonText=\"Login with Google\"\n//           />\n//         </GoogleOAuthProvider>\n//       </form>\n//     </div>\n//   );\n// };\n// export default Login;\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios.post('http://localhost:3000/auth/login', {\n      email,\n      password\n    }).then(response => {\n      if (response.data.message === 'Logged in successfully') {\n        // Handle successful login\n        console.log('Logged in successfully');\n      } else {\n        // Handle invalid email or password\n        setError('Invalid email or password');\n      }\n    }).catch(error => {\n      console.error(error);\n      setError('Error logging in');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto max-w-md space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 dark:text-gray-400\",\n        children: \"Enter your email and password to login.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          value: email,\n          onChange: event => setEmail(event.target.value),\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value),\n          placeholder: \"Enter password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"w-full\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"dpow0WXxoqygQZ0E6GERh5+vph4=\");\n_c = Login;\nexport default Login;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const Login = () => {\n//   const [formData, setFormData] = useState({\n//     email: '',\n//     password: ''\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prevState => ({\n//       ...prevState,\n//       [name]: value\n//     }));\n//   };\n\n//   const onSubmit = async (event) => {\n//     event.preventDefault();\n\n//     try {\n//       console.log('Form Data:', formData); // Debugging line\n//       const response = await axios.post('http://localhost:3000/login', {\n//         email: formData.email,\n//         password: formData.password\n//       });\n//       console.log('Login successful:', response.data);\n//       // Handle successful login\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//       // Handle login error\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={onSubmit}>\n//       <label>\n//         Email:\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={formData.email}\n//           onChange={handleChange}\n//           required\n//         />\n//       </label>\n//       <label>\n//         Password:\n//         <input\n//           type=\"password\"\n//           name=\"password\"\n//           value={formData.password}\n//           onChange={handleChange}\n//           required\n//         />\n//       </label>\n//       <button type=\"submit\">Login</button>\n//     </form>\n//   );\n// };\n\n// export default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Form","Button","axios","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","handleSubmit","event","preventDefault","post","then","response","data","message","console","log","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","value","onChange","target","placeholder","variant","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/AI-SCET Website/aiscet/src/auth/Login.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { useForm } from \"react-hook-form\";\r\n// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\n// import axios from 'axios';\r\n// import \"./Login.css\";\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Login = () => {\r\n//   const {\r\n//     register,\r\n//     handleSubmit,\r\n//     formState: { errors },\r\n//   } = useForm();\r\n//   const navigate = useNavigate();\r\n\r\n//   const onSubmit = async (data) => {\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:3000/auth/login\", data);\r\n//       if (response.data.success) {\r\n//         // Handle successful login\r\n//         sessionStorage.setItem('user', JSON.stringify(response.data.user));\r\n//         navigate('/manage');\r\n//       } else {\r\n//         // Redirect to register page if user does not exist\r\n//         navigate('/register');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error logging in\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleGoogleSuccess = async (response) => {\r\n//     try {\r\n//       const googleData = { token: response.credential };\r\n//       const result = await axios.post(\"http://localhost:3000/google-login\", googleData);\r\n//       if (result.data.success) {\r\n//         // Handle successful login\r\n//         sessionStorage.setItem('user', JSON.stringify(result.data.user));\r\n//         navigate('/manage');\r\n//       } else {\r\n//         // Redirect to register page if user does not exist\r\n//         navigate('/register');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Google login error\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleGoogleFailure = (error) => {\r\n//     console.error(\"Google login failed\", error);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <form onSubmit={handleSubmit(onSubmit)} className=\"login-form\">\r\n//         <h2>Login</h2>\r\n//         <div>\r\n//           <label>Email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             {...register(\"email\", {\r\n//               required: \"Email is required\",\r\n//               pattern: {\r\n//                 value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\r\n//                 message: \"Email must end with @scet.ac.in\",\r\n//               },\r\n//             })}\r\n//           />\r\n//           {errors.email && <p>{errors.email.message}</p>}\r\n//         </div>\r\n//         <div>\r\n//           <label>Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             {...register(\"password\", { required: \"Password is required\" })}\r\n//           />\r\n//           {errors.password && <p>{errors.password.message}</p>}\r\n//         </div>\r\n//         <button type=\"submit\">Login</button>\r\n//         <GoogleOAuthProvider clientId=\"313031444121-odnvb0dj5sfju6rovi1i6jbsl12o50la.apps.googleusercontent.com\">\r\n//           <GoogleLogin\r\n//             onSuccess={handleGoogleSuccess}\r\n//             onFailure={handleGoogleFailure}\r\n//             buttonText=\"Login with Google\"\r\n//           />\r\n//         </GoogleOAuthProvider>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n// export default Login;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    axios.post('http://localhost:3000/auth/login', { email, password })\r\n     .then((response) => {\r\n        if (response.data.message === 'Logged in successfully') {\r\n          // Handle successful login\r\n          console.log('Logged in successfully');\r\n        } else {\r\n          // Handle invalid email or password\r\n          setError('Invalid email or password');\r\n        }\r\n      })\r\n     .catch((error) => {\r\n        console.error(error);\r\n        setError('Error logging in');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mx-auto max-w-md space-y-6\">\r\n      <div className=\"space-y-2 text-center\">\r\n        <h1 className=\"text-3xl font-bold\">Login</h1>\r\n        <p className=\"text-gray-500 dark:text-gray-400\">\r\n          Enter your email and password to login.\r\n        </p>\r\n      </div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\" controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(event) => setEmail(event.target.value)}\r\n            placeholder=\"Enter email\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\" controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(event) => setPassword(event.target.value)}\r\n            placeholder=\"Enter password\"\r\n          />\r\n        </Form.Group>\r\n        {error && (\r\n          <div className=\"text-red-500\">{error}</div>\r\n        )}\r\n        <Button variant=\"primary\" type=\"submit\" className=\"w-full\">\r\n          Login\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Login = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     email: '',\r\n//     password: ''\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData(prevState => ({\r\n//       ...prevState,\r\n//       [name]: value\r\n//     }));\r\n//   };\r\n\r\n//   const onSubmit = async (event) => {\r\n//     event.preventDefault();\r\n    \r\n//     try {\r\n//       console.log('Form Data:', formData); // Debugging line\r\n//       const response = await axios.post('http://localhost:3000/login', {\r\n//         email: formData.email,\r\n//         password: formData.password\r\n//       });\r\n//       console.log('Login successful:', response.data);\r\n//       // Handle successful login\r\n//     } catch (error) {\r\n//       console.error('Error logging in:', error);\r\n//       // Handle login error\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={onSubmit}>\r\n//       <label>\r\n//         Email:\r\n//         <input\r\n//           type=\"email\"\r\n//           name=\"email\"\r\n//           value={formData.email}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//       </label>\r\n//       <label>\r\n//         Password:\r\n//         <input\r\n//           type=\"password\"\r\n//           name=\"password\"\r\n//           value={formData.password}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//       </label>\r\n//       <button type=\"submit\">Login</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}