{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\AI-SCET Website\\\\aiscet\\\\src\\\\auth\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\n// import axios from 'axios';\n// import \"./Login.css\";\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n//   const navigate = useNavigate();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\"http://localhost:5173/login\", data);\n//       if (response.data.success) {\n//         // Handle successful login\n//         sessionStorage.setItem('user', JSON.stringify(response.data.user));\n//         navigate('/manage');\n//       } else {\n//         // Redirect to register page if user does not exist\n//         navigate('/register');\n//       }\n//     } catch (error) {\n//       console.error(\"Error logging in\", error);\n//     }\n//   };\n\n//   const handleGoogleSuccess = async (response) => {\n//     try {\n//       const googleData = { token: response.credential };\n//       const result = await axios.post(\"http://localhost:5173/google-login\", googleData);\n//       if (result.data.success) {\n//         // Handle successful login\n//         sessionStorage.setItem('user', JSON.stringify(result.data.user));\n//         navigate('/manage');\n//       } else {\n//         // Redirect to register page if user does not exist\n//         navigate('/register');\n//       }\n//     } catch (error) {\n//       console.error(\"Google login error\", error);\n//     }\n//   };\n\n//   const handleGoogleFailure = (error) => {\n//     console.error(\"Google login failed\", error);\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <form onSubmit={handleSubmit(onSubmit)} className=\"login-form\">\n//         <h2>Login</h2>\n//         <div>\n//           <label>Email</label>\n//           <input\n//             type=\"email\"\n//             {...register(\"email\", {\n//               required: \"Email is required\",\n//               pattern: {\n//                 value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\n//                 message: \"Email must end with @scet.ac.in\",\n//               },\n//             })}\n//           />\n//           {errors.email && <p>{errors.email.message}</p>}\n//         </div>\n//         <div>\n//           <label>Password</label>\n//           <input\n//             type=\"password\"\n//             {...register(\"password\", { required: \"Password is required\" })}\n//           />\n//           {errors.password && <p>{errors.password.message}</p>}\n//         </div>\n//         <button type=\"submit\">Login</button>\n//         <GoogleOAuthProvider clientId=\"313031444121-odnvb0dj5sfju6rovi1i6jbsl12o50la.apps.googleusercontent.com\">\n//           <GoogleLogin\n//             onSuccess={handleGoogleSuccess}\n//             onFailure={handleGoogleFailure}\n//             buttonText=\"Login with Google\"\n//           />\n//         </GoogleOAuthProvider>\n//       </form>\n//     </div>\n//   );\n// };\n// export default Login;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const onSubmit = async event => {\n    event.preventDefault();\n    try {\n      console.log('Form Data:', formData); // Debugging line\n      const response = await axios.post('http://localhost:3000/login', {\n        email: formData.email,\n        password: formData.password\n      });\n      console.log('Login successful:', response.data);\n      // Handle successful login\n    } catch (error) {\n      console.error('Error logging in:', error);\n      // Handle login error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"IN1x5Nd7H9OKcK36spiQZIJPJnU=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","handleChange","e","name","value","target","prevState","onSubmit","event","preventDefault","console","log","response","post","data","error","children","type","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/AI-SCET Website/aiscet/src/auth/Login.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { useForm } from \"react-hook-form\";\r\n// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\n// import axios from 'axios';\r\n// import \"./Login.css\";\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Login = () => {\r\n//   const {\r\n//     register,\r\n//     handleSubmit,\r\n//     formState: { errors },\r\n//   } = useForm();\r\n//   const navigate = useNavigate();\r\n\r\n//   const onSubmit = async (data) => {\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:5173/login\", data);\r\n//       if (response.data.success) {\r\n//         // Handle successful login\r\n//         sessionStorage.setItem('user', JSON.stringify(response.data.user));\r\n//         navigate('/manage');\r\n//       } else {\r\n//         // Redirect to register page if user does not exist\r\n//         navigate('/register');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error logging in\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleGoogleSuccess = async (response) => {\r\n//     try {\r\n//       const googleData = { token: response.credential };\r\n//       const result = await axios.post(\"http://localhost:5173/google-login\", googleData);\r\n//       if (result.data.success) {\r\n//         // Handle successful login\r\n//         sessionStorage.setItem('user', JSON.stringify(result.data.user));\r\n//         navigate('/manage');\r\n//       } else {\r\n//         // Redirect to register page if user does not exist\r\n//         navigate('/register');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Google login error\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleGoogleFailure = (error) => {\r\n//     console.error(\"Google login failed\", error);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <form onSubmit={handleSubmit(onSubmit)} className=\"login-form\">\r\n//         <h2>Login</h2>\r\n//         <div>\r\n//           <label>Email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             {...register(\"email\", {\r\n//               required: \"Email is required\",\r\n//               pattern: {\r\n//                 value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\r\n//                 message: \"Email must end with @scet.ac.in\",\r\n//               },\r\n//             })}\r\n//           />\r\n//           {errors.email && <p>{errors.email.message}</p>}\r\n//         </div>\r\n//         <div>\r\n//           <label>Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             {...register(\"password\", { required: \"Password is required\" })}\r\n//           />\r\n//           {errors.password && <p>{errors.password.message}</p>}\r\n//         </div>\r\n//         <button type=\"submit\">Login</button>\r\n//         <GoogleOAuthProvider clientId=\"313031444121-odnvb0dj5sfju6rovi1i6jbsl12o50la.apps.googleusercontent.com\">\r\n//           <GoogleLogin\r\n//             onSuccess={handleGoogleSuccess}\r\n//             onFailure={handleGoogleFailure}\r\n//             buttonText=\"Login with Google\"\r\n//           />\r\n//         </GoogleOAuthProvider>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n// export default Login;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    try {\r\n      console.log('Form Data:', formData); // Debugging line\r\n      const response = await axios.post('http://localhost:3000/login', {\r\n        email: formData.email,\r\n        password: formData.password\r\n      });\r\n      console.log('Login successful:', response.data);\r\n      // Handle successful login\r\n    } catch (error) {\r\n      console.error('Error logging in:', error);\r\n      // Handle login error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <label>\r\n        Email:\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Password:\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}