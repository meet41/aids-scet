{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\AI-SCET Website\\\\aiscet\\\\src\\\\auth\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\n// import axios from 'axios';\n// import \"./Login.css\";\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n//   const navigate = useNavigate();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\"http://localhost:3000/auth/login\", data);\n//       if (response.data.success) {\n//         // Handle successful login\n//         sessionStorage.setItem('user', JSON.stringify(response.data.user));\n//         navigate('/manage');\n//       } else {\n//         // Redirect to register page if user does not exist\n//         navigate('/register');\n//       }\n//     } catch (error) {\n//       console.error(\"Error logging in\", error);\n//     }\n//   };\n\n//   const handleGoogleSuccess = async (response) => {\n//     try {\n//       const googleData = { token: response.credential };\n//       const result = await axios.post(\"http://localhost:3000/google-login\", googleData);\n//       if (result.data.success) {\n//         // Handle successful login\n//         sessionStorage.setItem('user', JSON.stringify(result.data.user));\n//         navigate('/manage');\n//       } else {\n//         // Redirect to register page if user does not exist\n//         navigate('/register');\n//       }\n//     } catch (error) {\n//       console.error(\"Google login error\", error);\n//     }\n//   };\n\n//   const handleGoogleFailure = (error) => {\n//     console.error(\"Google login failed\", error);\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <form onSubmit={handleSubmit(onSubmit)} className=\"login-form\">\n//         <h2>Login</h2>\n//         <div>\n//           <label>Email</label>\n//           <input\n//             type=\"email\"\n//             {...register(\"email\", {\n//               required: \"Email is required\",\n//               pattern: {\n//                 value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\n//                 message: \"Email must end with @scet.ac.in\",\n//               },\n//             })}\n//           />\n//           {errors.email && <p>{errors.email.message}</p>}\n//         </div>\n//         <div>\n//           <label>Password</label>\n//           <input\n//             type=\"password\"\n//             {...register(\"password\", { required: \"Password is required\" })}\n//           />\n//           {errors.password && <p>{errors.password.message}</p>}\n//         </div>\n//         <button type=\"submit\">Login</button>\n//         <GoogleOAuthProvider clientId=\"313031444121-odnvb0dj5sfju6rovi1i6jbsl12o50la.apps.googleusercontent.com\">\n//           <GoogleLogin\n//             onSuccess={handleGoogleSuccess}\n//             onFailure={handleGoogleFailure}\n//             buttonText=\"Login with Google\"\n//           />\n//         </GoogleOAuthProvider>\n//       </form>\n//     </div>\n//   );\n// };\n// export default Login;\n\n// Login.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function Login() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState(null);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post('http://localhost:3000/login', {\n//         email,\n//         password,\n//       });\n//       if (response.status === 200) {\n//         window.location.href = '/Manage';\n//       }\n//     } catch (err) {\n//       setError(err.response?.data?.message || 'An error occurred');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <label>Email:</label>\n//         <input\n//           type=\"email\"\n//           value={email}\n//           formNoValidate\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//         <br />\n//         <label>Password:</label>\n//         <input\n//           type=\"password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//         <br />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       {error && <div style={{ color: 'red' }}>{error}</div>}\n//     </div>\n//   );\n// }\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      console.log('Sending login request with:', {\n        email,\n        password\n      });\n      const response = await axios.post('http://localhost:3000/login', {\n        email,\n        password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        // Redirect to manage page on successful login\n        navigate('/manage');\n      }\n    } catch (err) {\n      console.error('Login request failed:', err);\n      if (err.response && err.response.status === 401) {\n        setError('Invalid email or password');\n      } else {\n        setError('Server error');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          id: \"email\",\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          id: \"password\",\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"04s5JR+/x8JdloJ2sm+29L/IvyI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const Login = () => {\n//   const [formData, setFormData] = useState({\n//     email: '',\n//     password: ''\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prevState => ({\n//       ...prevState,\n//       [name]: value\n//     }));\n//   };\n\n//   const onSubmit = async (event) => {\n//     event.preventDefault();\n\n//     try {\n//       console.log('Form Data:', formData); // Debugging line\n//       const response = await axios.post('http://localhost:3000/login', {\n//         email: formData.email,\n//         password: formData.password\n//       });\n//       console.log('Login successful:', response.data);\n//       // Handle successful login\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//       // Handle login error\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={onSubmit}>\n//       <label>\n//         Email:\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={formData.email}\n//           onChange={handleChange}\n//           required\n//         />\n//       </label>\n//       <label>\n//         Password:\n//         <input\n//           type=\"password\"\n//           name=\"password\"\n//           value={formData.password}\n//           onChange={handleChange}\n//           required\n//         />\n//       </label>\n//       <button type=\"submit\">Login</button>\n//     </form>\n//   );\n// };\n\n// export default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","console","log","response","post","headers","status","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","id","onChange","target","required","style","color","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/AI-SCET Website/aiscet/src/auth/Login.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { useForm } from \"react-hook-form\";\r\n// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\n// import axios from 'axios';\r\n// import \"./Login.css\";\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Login = () => {\r\n//   const {\r\n//     register,\r\n//     handleSubmit,\r\n//     formState: { errors },\r\n//   } = useForm();\r\n//   const navigate = useNavigate();\r\n\r\n//   const onSubmit = async (data) => {\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:3000/auth/login\", data);\r\n//       if (response.data.success) {\r\n//         // Handle successful login\r\n//         sessionStorage.setItem('user', JSON.stringify(response.data.user));\r\n//         navigate('/manage');\r\n//       } else {\r\n//         // Redirect to register page if user does not exist\r\n//         navigate('/register');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error logging in\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleGoogleSuccess = async (response) => {\r\n//     try {\r\n//       const googleData = { token: response.credential };\r\n//       const result = await axios.post(\"http://localhost:3000/google-login\", googleData);\r\n//       if (result.data.success) {\r\n//         // Handle successful login\r\n//         sessionStorage.setItem('user', JSON.stringify(result.data.user));\r\n//         navigate('/manage');\r\n//       } else {\r\n//         // Redirect to register page if user does not exist\r\n//         navigate('/register');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Google login error\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleGoogleFailure = (error) => {\r\n//     console.error(\"Google login failed\", error);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <form onSubmit={handleSubmit(onSubmit)} className=\"login-form\">\r\n//         <h2>Login</h2>\r\n//         <div>\r\n//           <label>Email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             {...register(\"email\", {\r\n//               required: \"Email is required\",\r\n//               pattern: {\r\n//                 value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\r\n//                 message: \"Email must end with @scet.ac.in\",\r\n//               },\r\n//             })}\r\n//           />\r\n//           {errors.email && <p>{errors.email.message}</p>}\r\n//         </div>\r\n//         <div>\r\n//           <label>Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             {...register(\"password\", { required: \"Password is required\" })}\r\n//           />\r\n//           {errors.password && <p>{errors.password.message}</p>}\r\n//         </div>\r\n//         <button type=\"submit\">Login</button>\r\n//         <GoogleOAuthProvider clientId=\"313031444121-odnvb0dj5sfju6rovi1i6jbsl12o50la.apps.googleusercontent.com\">\r\n//           <GoogleLogin\r\n//             onSuccess={handleGoogleSuccess}\r\n//             onFailure={handleGoogleFailure}\r\n//             buttonText=\"Login with Google\"\r\n//           />\r\n//         </GoogleOAuthProvider>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n// export default Login;\r\n\r\n\r\n            // Login.js\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function Login() {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState(null);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3000/login', {\r\n//         email,\r\n//         password,\r\n//       });\r\n//       if (response.status === 200) {\r\n//         window.location.href = '/Manage';\r\n//       }\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'An error occurred');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label>Email:</label>\r\n//         <input\r\n//           type=\"email\"\r\n//           value={email}\r\n//           formNoValidate\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           required\r\n//         />\r\n//         <br />\r\n//         <label>Password:</label>\r\n//         <input\r\n//           type=\"password\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required\r\n//         />\r\n//         <br />\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//       {error && <div style={{ color: 'red' }}>{error}</div>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      console.log('Sending login request with:', { email, password });\r\n      const response = await axios.post('http://localhost:3000/login', { email, password }, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n    \r\n      if (response.status === 200) {\r\n        // Redirect to manage page on successful login\r\n        navigate('/manage');\r\n      }\r\n    } catch (err) {\r\n      console.error('Login request failed:', err);\r\n      if (err.response && err.response.status === 401) {\r\n        setError('Invalid email or password');\r\n      } else {\r\n        setError('Server error');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            id=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            id=\"password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Login = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     email: '',\r\n//     password: ''\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData(prevState => ({\r\n//       ...prevState,\r\n//       [name]: value\r\n//     }));\r\n//   };\r\n\r\n//   const onSubmit = async (event) => {\r\n//     event.preventDefault();\r\n    \r\n//     try {\r\n//       console.log('Form Data:', formData); // Debugging line\r\n//       const response = await axios.post('http://localhost:3000/login', {\r\n//         email: formData.email,\r\n//         password: formData.password\r\n//       });\r\n//       console.log('Login successful:', response.data);\r\n//       // Handle successful login\r\n//     } catch (error) {\r\n//       console.error('Error logging in:', error);\r\n//       // Handle login error\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={onSubmit}>\r\n//       <label>\r\n//         Email:\r\n//         <input\r\n//           type=\"email\"\r\n//           name=\"email\"\r\n//           value={formData.email}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//       </label>\r\n//       <label>\r\n//         Password:\r\n//         <input\r\n//           type=\"password\"\r\n//           name=\"password\"\r\n//           value={formData.password}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//       </label>\r\n//       <button type=\"submit\">Login</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE;QA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}