{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\AI-SCET Website\\\\aiscet\\\\src\\\\components\\\\Register.jsx\",\n  _s = $RefreshSig$();\n// // RegisterForm.js\n\n// import React from 'react';\n// import { useForm } from 'react-hook-form';\n\n// const Register = () => {\n//   const { register, handleSubmit, formState: { errors } } = useForm();\n\n//   const onSubmit = (data) => {\n//     console.log(data); // Replace with your logic to handle form submission (e.g., API call)\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit(onSubmit)}>\n//       <h2>Register</h2>\n//       <div>\n//         <label>Email</label>\n//         <input\n//           type=\"email\"\n//           {...register('email', {\n//             required: 'Email is required',\n//             pattern: {\n//               value: /^[a-zA-Z0-9._%+-]+@example\\.com$/,\n//               message: 'Invalid email address',\n//             },\n//           })}\n//         />\n//         {errors.email && <p>{errors.email.message}</p>}\n//       </div>\n//       <div>\n//         <label>Password</label>\n//         <input\n//           type=\"password\"\n//           {...register('password', { required: 'Password is required' })}\n//         />\n//         {errors.password && <p>{errors.password.message}</p>}\n//       </div>\n//       <div>\n//         <label>Confirm Password</label>\n//         <input\n//           type=\"password\"\n//           {...register('confirmPassword', {\n//             validate: (value) => value === password || 'The passwords do not match',\n//           })}\n//         />\n//         {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\n//       </div>\n//       <button type=\"submit\">Register</button>\n//     </form>\n//   );\n// };\n\n// export default Register;\n\n// import React from 'react';\n// import { useForm } from 'react-hook-form';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Register = () => {\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n//   const navigate = useNavigate();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\"http://localhost:3000/register\", data);\n//       if (response.data.success) {\n//         navigate('/login');\n//       }\n//     } catch (error) {\n//       console.error(\"Error registering\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"register-container\">\n//       <form onSubmit={handleSubmit(onSubmit)} className=\"register-form\">\n//         <h2>Register</h2>\n//         <div>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             {...register(\"name\", { required: \"Name is required\" })}\n//           />\n//           {errors.name && <p>{errors.name.message}</p>}\n//         </div>\n//         <div>\n//           <label>Email</label>\n//           <input\n//             type=\"email\"\n//             {...register(\"email\", {\n//               required: \"Email is required\",\n//               pattern: {\n//                 value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\n//                 message: \"Email must end with @scet.ac.in\",\n//               },\n//             })}\n//           />\n//           {errors.email && <p>{errors.email.message}</p>}\n//         </div>\n//         <div>\n//           <label>Password</label>\n//           <input\n//             type=\"password\"\n//             {...register(\"password\", { required: \"Password is required\" })}\n//           />\n//           {errors.password && <p>{errors.password.message}</p>}\n//         </div>\n//         <button type=\"submit\">Register</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Register;\n\n// import React from 'react';\n// import { useForm } from 'react-hook-form';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const Register = () => {\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n//   const navigate = useNavigate();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\"http://localhost:3000/register\", data);\n//       if (response.data.success) {\n//         navigate('/login');\n//       } else {\n//         console.error(\"Registration failed:\", response.data.message);\n//       }\n//     } catch (error) {\n//       console.error(\"Error registering\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"register-container\">\n//       <form onSubmit={handleSubmit(onSubmit)} className=\"register-form\">\n//         <h2>Register</h2>\n//         <div>\n//           <label>Name</label>\n//           <input\n//             type=\"text\"\n//             {...register(\"name\", { required: \"Name is required\" })}\n//           />\n//           {errors.name && <p>{errors.name.message}</p>}\n//         </div>\n//         <div>\n//           <label>Email</label>\n//           <input\n//             type=\"email\"\n//             {...register(\"email\", {\n//               required: \"Email is required\",\n//               pattern: {\n//                 value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\n//                 message: \"Email must end with @scet.ac.in\",\n//               },\n//             })}\n//           />\n//           {errors.email && <p>{errors.email.message}</p>}\n//         </div>\n//         <div>\n//           <label>Password</label>\n//           <input\n//             type=\"password\"\n//             {...register(\"password\", { required: \"Password is required\" })}\n//           />\n//           {errors.password && <p>{errors.password.message}</p>}\n//         </div>\n//         <button type=\"submit\">Register</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Register;\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    });\n    if (response.ok) {\n      history.push('/login');\n    } else {\n      alert('Registration failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"kAlmre2uRaQyIn5FFC/NgTSH03I=\", false, function () {\n  return [useHistory];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useHistory","jsxDEV","_jsxDEV","Register","_s","name","setName","email","setEmail","password","setPassword","history","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","push","alert","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/AI-SCET Website/aiscet/src/components/Register.jsx"],"sourcesContent":["// // RegisterForm.js\r\n\r\n// import React from 'react';\r\n// import { useForm } from 'react-hook-form';\r\n\r\n// const Register = () => {\r\n//   const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n//   const onSubmit = (data) => {\r\n//     console.log(data); // Replace with your logic to handle form submission (e.g., API call)\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit(onSubmit)}>\r\n//       <h2>Register</h2>\r\n//       <div>\r\n//         <label>Email</label>\r\n//         <input\r\n//           type=\"email\"\r\n//           {...register('email', {\r\n//             required: 'Email is required',\r\n//             pattern: {\r\n//               value: /^[a-zA-Z0-9._%+-]+@example\\.com$/,\r\n//               message: 'Invalid email address',\r\n//             },\r\n//           })}\r\n//         />\r\n//         {errors.email && <p>{errors.email.message}</p>}\r\n//       </div>\r\n//       <div>\r\n//         <label>Password</label>\r\n//         <input\r\n//           type=\"password\"\r\n//           {...register('password', { required: 'Password is required' })}\r\n//         />\r\n//         {errors.password && <p>{errors.password.message}</p>}\r\n//       </div>\r\n//       <div>\r\n//         <label>Confirm Password</label>\r\n//         <input\r\n//           type=\"password\"\r\n//           {...register('confirmPassword', {\r\n//             validate: (value) => value === password || 'The passwords do not match',\r\n//           })}\r\n//         />\r\n//         {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\r\n//       </div>\r\n//       <button type=\"submit\">Register</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n// import React from 'react';\r\n// import { useForm } from 'react-hook-form';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Register = () => {\r\n//   const {\r\n//     register,\r\n//     handleSubmit,\r\n//     formState: { errors },\r\n//   } = useForm();\r\n//   const navigate = useNavigate();\r\n\r\n//   const onSubmit = async (data) => {\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:3000/register\", data);\r\n//       if (response.data.success) {\r\n//         navigate('/login');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error registering\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"register-container\">\r\n//       <form onSubmit={handleSubmit(onSubmit)} className=\"register-form\">\r\n//         <h2>Register</h2>\r\n//         <div>\r\n//           <label>Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             {...register(\"name\", { required: \"Name is required\" })}\r\n//           />\r\n//           {errors.name && <p>{errors.name.message}</p>}\r\n//         </div>\r\n//         <div>\r\n//           <label>Email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             {...register(\"email\", {\r\n//               required: \"Email is required\",\r\n//               pattern: {\r\n//                 value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\r\n//                 message: \"Email must end with @scet.ac.in\",\r\n//               },\r\n//             })}\r\n//           />\r\n//           {errors.email && <p>{errors.email.message}</p>}\r\n//         </div>\r\n//         <div>\r\n//           <label>Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             {...register(\"password\", { required: \"Password is required\" })}\r\n//           />\r\n//           {errors.password && <p>{errors.password.message}</p>}\r\n//         </div>\r\n//         <button type=\"submit\">Register</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n\r\n// import React from 'react';\r\n// import { useForm } from 'react-hook-form';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Register = () => {\r\n//   const {\r\n//     register,\r\n//     handleSubmit,\r\n//     formState: { errors },\r\n//   } = useForm();\r\n//   const navigate = useNavigate();\r\n\r\n//   const onSubmit = async (data) => {\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:3000/register\", data);\r\n//       if (response.data.success) {\r\n//         navigate('/login');\r\n//       } else {\r\n//         console.error(\"Registration failed:\", response.data.message);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error registering\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"register-container\">\r\n//       <form onSubmit={handleSubmit(onSubmit)} className=\"register-form\">\r\n//         <h2>Register</h2>\r\n//         <div>\r\n//           <label>Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             {...register(\"name\", { required: \"Name is required\" })}\r\n//           />\r\n//           {errors.name && <p>{errors.name.message}</p>}\r\n//         </div>\r\n//         <div>\r\n//           <label>Email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             {...register(\"email\", {\r\n//               required: \"Email is required\",\r\n//               pattern: {\r\n//                 value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\r\n//                 message: \"Email must end with @scet.ac.in\",\r\n//               },\r\n//             })}\r\n//           />\r\n//           {errors.email && <p>{errors.email.message}</p>}\r\n//         </div>\r\n//         <div>\r\n//           <label>Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             {...register(\"password\", { required: \"Password is required\" })}\r\n//           />\r\n//           {errors.password && <p>{errors.password.message}</p>}\r\n//         </div>\r\n//         <button type=\"submit\">Register</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Register() {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch('/register', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ name, email, password })\r\n    });\r\n    if (response.ok) {\r\n      history.push('/login');\r\n    } else {\r\n      alert('Registration failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>Name:</label>\r\n        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n      </div>\r\n      <div>\r\n        <label>Email:</label>\r\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n      </div>\r\n      <div>\r\n        <label>Password:</label>\r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n      </div>\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Register;"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,OAAO,GAAGX,UAAU,CAAC,CAAC;EAE5B,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAE;MACxCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEhB,IAAI;QAAEE,KAAK;QAAEE;MAAS,CAAC;IAChD,CAAC,CAAC;IACF,IAAIM,QAAQ,CAACO,EAAE,EAAE;MACfX,OAAO,CAACY,IAAI,CAAC,QAAQ,CAAC;IACxB,CAAC,MAAM;MACLC,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,oBACEtB,OAAA;IAAMuB,QAAQ,EAAEb,YAAa;IAAAc,QAAA,gBAC3BxB,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QAAAwB,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpB5B,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACC,KAAK,EAAE3B,IAAK;QAAC4B,QAAQ,EAAGpB,CAAC,IAAKP,OAAO,CAACO,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;QAACG,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClF,CAAC,eACN5B,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QAAAwB,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrB5B,OAAA;QAAO6B,IAAI,EAAC,OAAO;QAACC,KAAK,EAAEzB,KAAM;QAAC0B,QAAQ,EAAGpB,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;QAACG,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CAAC,eACN5B,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QAAAwB,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxB5B,OAAA;QAAO6B,IAAI,EAAC,UAAU;QAACC,KAAK,EAAEvB,QAAS;QAACwB,QAAQ,EAAGpB,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;QAACG,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9F,CAAC,eACN5B,OAAA;MAAQ6B,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX;AAAC1B,EAAA,CArCQD,QAAQ;EAAA,QAICH,UAAU;AAAA;AAAAoC,EAAA,GAJnBjC,QAAQ;AAuCjB,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}