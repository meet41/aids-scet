{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\AI-SCET Website\\\\aiscet\\\\src\\\\auth\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\n// import axios from 'axios';\n// import \"./Login.css\";\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n//   const navigate = useNavigate();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\"http://localhost:5173/login\", data);\n//       if (response.data.success) {\n//         // Handle successful login\n//         sessionStorage.setItem('user', JSON.stringify(response.data.user));\n//         navigate('/manage');\n//       } else {\n//         // Redirect to register page if user does not exist\n//         navigate('/register');\n//       }\n//     } catch (error) {\n//       console.error(\"Error logging in\", error);\n//     }\n//   };\n\n//   const handleGoogleSuccess = async (response) => {\n//     try {\n//       const googleData = { token: response.credential };\n//       const result = await axios.post(\"http://localhost:5173/google-login\", googleData);\n//       if (result.data.success) {\n//         // Handle successful login\n//         sessionStorage.setItem('user', JSON.stringify(result.data.user));\n//         navigate('/manage');\n//       } else {\n//         // Redirect to register page if user does not exist\n//         navigate('/register');\n//       }\n//     } catch (error) {\n//       console.error(\"Google login error\", error);\n//     }\n//   };\n\n//   const handleGoogleFailure = (error) => {\n//     console.error(\"Google login failed\", error);\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <form onSubmit={handleSubmit(onSubmit)} className=\"login-form\">\n//         <h2>Login</h2>\n//         <div>\n//           <label>Email</label>\n//           <input\n//             type=\"email\"\n//             {...register(\"email\", {\n//               required: \"Email is required\",\n//               pattern: {\n//                 value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\n//                 message: \"Email must end with @scet.ac.in\",\n//               },\n//             })}\n//           />\n//           {errors.email && <p>{errors.email.message}</p>}\n//         </div>\n//         <div>\n//           <label>Password</label>\n//           <input\n//             type=\"password\"\n//             {...register(\"password\", { required: \"Password is required\" })}\n//           />\n//           {errors.password && <p>{errors.password.message}</p>}\n//         </div>\n//         <button type=\"submit\">Login</button>\n//         <GoogleOAuthProvider clientId=\"313031444121-odnvb0dj5sfju6rovi1i6jbsl12o50la.apps.googleusercontent.com\">\n//           <GoogleLogin\n//             onSuccess={handleGoogleSuccess}\n//             onFailure={handleGoogleFailure}\n//             buttonText=\"Login with Google\"\n//           />\n//         </GoogleOAuthProvider>\n//       </form>\n//     </div>\n//   );\n// };\n// export default Login;\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport axios from 'axios';\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = async data => {\n    try {\n      const response = await axios.post(\"http://localhost:3000/login\", data);\n      console.log(response.data);\n      // Handle successful login\n    } catch (error) {\n      console.error(\"Error logging in\", error);\n      if (error.response) {\n        console.log(\"Response error:\", error.response.data);\n      } else if (error.request) {\n        console.log(\"Request error:\", error.request);\n      } else {\n        console.log(\"General error:\", error.message);\n      }\n    }\n  };\n  const handleGoogleSuccess = async response => {\n    try {\n      const googleData = {\n        token: response.credential\n      };\n      const result = await axios.post(\"http://localhost:3000/google-login\", googleData);\n      console.log(result.data);\n      // Handle successful login\n    } catch (error) {\n      console.error(\"Google login error\", error);\n    }\n  };\n  const handleGoogleFailure = error => {\n    console.error(\"Google login failed\", error);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          ...register(\"email\", {\n            required: \"Email is required\",\n            pattern: {\n              value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\n              message: \"Email must end with @scet.ac.in\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ...register(\"password\", {\n            required: \"Password is required\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n        clientId: \"313031444121-odnvb0dj5sfju6rovi1i6jbsl12o50la.apps.googleusercontent.com\",\n        children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: handleGoogleSuccess,\n          onFailure: handleGoogleFailure,\n          buttonText: \"Login with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://localhost:3000/Register\",\n        children: \"Not Register? Sign Up Here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"RcUlyA4GEHKh2CRkv6V7TGIZ2pY=\", false, function () {\n  return [useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useForm","GoogleOAuthProvider","GoogleLogin","axios","jsxDEV","_jsxDEV","Login","_s","register","handleSubmit","formState","errors","onSubmit","data","response","post","console","log","error","request","message","handleGoogleSuccess","googleData","token","credential","result","handleGoogleFailure","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","required","pattern","value","email","password","clientId","onSuccess","onFailure","buttonText","href","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/AI-SCET Website/aiscet/src/auth/Login.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { useForm } from \"react-hook-form\";\r\n// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\n// import axios from 'axios';\r\n// import \"./Login.css\";\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Login = () => {\r\n//   const {\r\n//     register,\r\n//     handleSubmit,\r\n//     formState: { errors },\r\n//   } = useForm();\r\n//   const navigate = useNavigate();\r\n\r\n//   const onSubmit = async (data) => {\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:5173/login\", data);\r\n//       if (response.data.success) {\r\n//         // Handle successful login\r\n//         sessionStorage.setItem('user', JSON.stringify(response.data.user));\r\n//         navigate('/manage');\r\n//       } else {\r\n//         // Redirect to register page if user does not exist\r\n//         navigate('/register');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error logging in\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleGoogleSuccess = async (response) => {\r\n//     try {\r\n//       const googleData = { token: response.credential };\r\n//       const result = await axios.post(\"http://localhost:5173/google-login\", googleData);\r\n//       if (result.data.success) {\r\n//         // Handle successful login\r\n//         sessionStorage.setItem('user', JSON.stringify(result.data.user));\r\n//         navigate('/manage');\r\n//       } else {\r\n//         // Redirect to register page if user does not exist\r\n//         navigate('/register');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Google login error\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleGoogleFailure = (error) => {\r\n//     console.error(\"Google login failed\", error);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <form onSubmit={handleSubmit(onSubmit)} className=\"login-form\">\r\n//         <h2>Login</h2>\r\n//         <div>\r\n//           <label>Email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             {...register(\"email\", {\r\n//               required: \"Email is required\",\r\n//               pattern: {\r\n//                 value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\r\n//                 message: \"Email must end with @scet.ac.in\",\r\n//               },\r\n//             })}\r\n//           />\r\n//           {errors.email && <p>{errors.email.message}</p>}\r\n//         </div>\r\n//         <div>\r\n//           <label>Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             {...register(\"password\", { required: \"Password is required\" })}\r\n//           />\r\n//           {errors.password && <p>{errors.password.message}</p>}\r\n//         </div>\r\n//         <button type=\"submit\">Login</button>\r\n//         <GoogleOAuthProvider clientId=\"313031444121-odnvb0dj5sfju6rovi1i6jbsl12o50la.apps.googleusercontent.com\">\r\n//           <GoogleLogin\r\n//             onSuccess={handleGoogleSuccess}\r\n//             onFailure={handleGoogleFailure}\r\n//             buttonText=\"Login with Google\"\r\n//           />\r\n//         </GoogleOAuthProvider>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n// export default Login;\r\n\r\n\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\nimport axios from 'axios';\r\nimport \"./Login.css\";\r\n\r\nconst Login = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3000/login\", data);\r\n      console.log(response.data);\r\n      // Handle successful login\r\n    } catch (error) {\r\n      console.error(\"Error logging in\", error);\r\n      if (error.response) {\r\n        console.log(\"Response error:\", error.response.data);\r\n      } else if (error.request) {\r\n        console.log(\"Request error:\", error.request);\r\n      } else {\r\n        console.log(\"General error:\", error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleGoogleSuccess = async (response) => {\r\n    try {\r\n      const googleData = { token: response.credential };\r\n      const result = await axios.post(\"http://localhost:3000/google-login\", googleData);\r\n      console.log(result.data);\r\n      // Handle successful login\r\n    } catch (error) {\r\n      console.error(\"Google login error\", error);\r\n    }\r\n  };\r\n\r\n  const handleGoogleFailure = (error) => {\r\n    console.error(\"Google login failed\", error);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"login-form\">\r\n        <h2>Login</h2>\r\n        <div>\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            {...register(\"email\", {\r\n              required: \"Email is required\",\r\n              pattern: {\r\n                value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\r\n                message: \"Email must end with @scet.ac.in\",\r\n              },\r\n            })}\r\n          />\r\n          {errors.email && <p>{errors.email.message}</p>}\r\n        </div>\r\n        <div>\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            {...register(\"password\", { required: \"Password is required\" })}\r\n          />\r\n          {errors.password && <p>{errors.password.message}</p>}\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n        <GoogleOAuthProvider clientId=\"313031444121-odnvb0dj5sfju6rovi1i6jbsl12o50la.apps.googleusercontent.com\">\r\n          <GoogleLogin\r\n            onSuccess={handleGoogleSuccess}\r\n            onFailure={handleGoogleFailure}\r\n            buttonText=\"Login with Google\"\r\n          />\r\n        </GoogleOAuthProvider>\r\n        <a href=\"http://localhost:3000/Register\">Not Register? Sign Up Here!</a>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}