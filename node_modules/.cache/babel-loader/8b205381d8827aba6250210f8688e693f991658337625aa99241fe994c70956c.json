{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\AI-SCET Website\\\\aiscet\\\\src\\\\components\\\\Manage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const Manage = () => {\n//   const [selectedOption, setSelectedOption] = useState('');\n//   const [action, setAction] = useState('');\n//   const [formData, setFormData] = useState({});\n\n//   const handleOptionChange = (e) => {\n//     setSelectedOption(e.target.value);\n//     setAction('');\n//     setFormData({});\n//   };\n\n//   const handleActionChange = (e) => {\n//     setAction(e.target.value);\n//     setFormData({});\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleFileChange = (e) => {\n//     const { name, files } = e.target;\n//     setFormData({ ...formData, [name]: files[0] });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const form = new FormData();\n//     for (const key in formData) {\n//       form.append(key, formData[key]);\n//     }\n\n//     try {\n//       const response = await axios.post(`/${selectedOption}/${action}`, form, {\n//         headers: { 'Content-Type': 'multipart/form-data' }\n//       });\n//       console.log(response.data);\n//     } catch (error) {\n//       console.error('There was an error!', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Manage</h1>\n//       <div>\n//         <label>\n//           Select Option:\n//           <select value={selectedOption} onChange={handleOptionChange}>\n//             <option value=\"\">--Select--</option>\n//             <option value=\"images\">Images</option>\n//             <option value=\"syllabus\">Syllabus</option>\n//             <option value=\"result\">Result</option>\n//             <option value=\"exam\">Exam</option>\n//           </select>\n//         </label>\n//       </div>\n\n//       {selectedOption && (\n//         <div>\n//           <label>\n//             Select Action:\n//             <select value={action} onChange={handleActionChange}>\n//               <option value=\"\">--Select--</option>\n//               <option value=\"insert\">Insert</option>\n//               <option value=\"update\">Update</option>\n//               <option value=\"delete\">Delete</option>\n//             </select>\n//           </label>\n//         </div>\n//       )}\n\n//       {action && (\n//         <form onSubmit={handleSubmit}>\n//           {selectedOption === 'images' && (\n//             <>\n//               <label>\n//                 Upload Image:\n//                 <input type=\"file\" name=\"image\" onChange={handleFileChange} />\n//               </label>\n//             </>\n//           )}\n\n//           {selectedOption === 'syllabus' && (\n//             <>\n//               <label>\n//                 Subcode:\n//                 <input type=\"text\" name=\"subcode\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Semester:\n//                 <input type=\"text\" name=\"sem\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Name:\n//                 <input type=\"text\" name=\"name\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Credit:\n//                 <input type=\"text\" name=\"credit\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Syllabus File:\n//                 <input type=\"file\" name=\"syllabusFile\" onChange={handleFileChange} />\n//               </label>\n//             </>\n//           )}\n\n//           {selectedOption === 'result' && (\n//             <>\n//               <label>\n//                 Semester:\n//                 <input type=\"text\" name=\"sem\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Result File:\n//                 <input type=\"file\" name=\"resultFile\" onChange={handleFileChange} />\n//               </label>\n//             </>\n//           )}\n\n//           {selectedOption === 'exam' && (\n//             <>\n//               <label>\n//                 Exam Type:\n//                 <input type=\"text\" name=\"examtype\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Year:\n//                 <input type=\"text\" name=\"year\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Semester:\n//                 <input type=\"text\" name=\"sem\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Class:\n//                 <input type=\"text\" name=\"class\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Schedule:\n//                 <input type=\"text\" name=\"schedule\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Seating Arrangement:\n//                 <input type=\"text\" name=\"seatingArrangement\" onChange={handleInputChange} />\n//               </label>\n//             </>\n//           )}\n\n//           <button type=\"submit\">Submit</button>\n//         </form>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Manage;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const Manage = () => {\n//   const [selectedOption, setSelectedOption] = useState('');\n//   const [action, setAction] = useState('');\n//   const [formData, setFormData] = useState({});\n\n//   // Handle option selection change\n//   const handleOptionChange = (e) => {\n//     setSelectedOption(e.target.value);\n//     setAction('');\n//     setFormData({});\n//   };\n\n//   // Handle action selection change\n//   const handleActionChange = (e) => {\n//     setAction(e.target.value);\n//     setFormData({});\n//   };\n\n//   // Handle input field change\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   // Handle file field change\n//   const handleFileChange = (e) => {\n//     const { name, files } = e.target;\n//     setFormData({ ...formData, [name]: files[0] });\n//   };\n\n//   // Handle form submission\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const form = new FormData();\n//     for (const key in formData) {\n//       form.append(key, formData[key]);\n//     }\n\n//     try {\n//       const response = await axios.post(`/${selectedOption}/${action}`, form, {\n//         headers: { 'Content-Type': 'multipart/form-data' },\n//       });\n//       console.log(response.data);\n//     } catch (error) {\n//       console.error('There was an error!', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Manage</h1>\n//       <div>\n//         <label>\n//           Select Option:\n//           <select value={selectedOption} onChange={handleOptionChange}>\n//             <option value=\"\">--Select--</option>\n//             <option value=\"images\">Images</option>\n//             <option value=\"syllabus\">Syllabus</option>\n//             <option value=\"result\">Result</option>\n//             <option value=\"exam\">Exam</option>\n//           </select>\n//         </label>\n//       </div>\n\n//       {selectedOption && (\n//         <div>\n//           <label>\n//             Select Action:\n//             <select value={action} onChange={handleActionChange}>\n//               <option value=\"\">--Select--</option>\n//               <option value=\"insert\">Insert</option>\n//               <option value=\"update\">Update</option>\n//               <option value=\"delete\">Delete</option>\n//             </select>\n//           </label>\n//         </div>\n//       )}\n\n//       {action && (\n//         <form onSubmit={handleSubmit}>\n//           {selectedOption === 'images' && (\n//             <>\n//               <label>\n//                 Upload Image:\n//                 <input type=\"file\" name=\"image\" onChange={handleFileChange} />\n//               </label>\n//             </>\n//           )}\n\n//           {selectedOption === 'syllabus' && (\n//             <>\n//               <label>\n//                 Subcode:\n//                 <input type=\"text\" name=\"subcode\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Semester:\n//                 <input type=\"text\" name=\"sem\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Name:\n//                 <input type=\"text\" name=\"name\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Credit:\n//                 <input type=\"text\" name=\"credit\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Syllabus File:\n//                 <input type=\"file\" name=\"syllabusFile\" onChange={handleFileChange} />\n//               </label>\n//             </>\n//           )}\n\n//           {selectedOption === 'result' && (\n//             <>\n//               <label>\n//                 Semester:\n//                 <input type=\"text\" name=\"sem\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Result File:\n//                 <input type=\"file\" name=\"resultFile\" onChange={handleFileChange} />\n//               </label>\n//             </>\n//           )}\n\n//           {selectedOption === 'exam' && (\n//             <>\n//               <label>\n//                 Exam Type:\n//                 <input type=\"text\" name=\"examtype\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Year:\n//                 <input type=\"text\" name=\"year\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Semester:\n//                 <input type=\"text\" name=\"sem\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Class:\n//                 <input type=\"text\" name=\"class\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Schedule:\n//                 <input type=\"text\" name=\"schedule\" onChange={handleInputChange} />\n//               </label>\n//               <label>\n//                 Seating Arrangement:\n//                 <input type=\"text\" name=\"seatingArrangement\" onChange={handleInputChange} />\n//               </label>\n//             </>\n//           )}\n\n//           <button type=\"submit\">Submit</button>\n//         </form>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Manage;\n\n// updated\n// import React, { useState } from 'react';\n\n// function Manage() {\n//   const [operation, setOperation] = useState('');\n//   const [data, setData] = useState('');\n//   const [file, setFile] = useState(null);\n\n//   const handleOperationChange = (e) => {\n//     setOperation(e.target.value);\n//   };\n\n//   const handleDataChange = (e) => {\n//     setData(e.target.value);\n//   };\n\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     formData.append('operation', operation);\n//     formData.append('data', data);\n//     if (file) {\n//       formData.append('file', file);\n//     }\n\n//     try {\n//       const response = await fetch('/manage', {\n//         method: 'POST',\n//         body: formData,\n//       });\n//       if (response.ok) {\n//         alert('Operation successful');\n//       } else {\n//         alert('Operation failed');\n//       }\n//     } catch (error) {\n//       console.error('Error:', error);\n//       alert('Operation failed');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Manage</h2>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>Operation:</label>\n//           <select value={operation} onChange={handleOperationChange}>\n//             <option value=\"\">Select Operation</option>\n//             <option value=\"uploadImage\">Upload Image</option>\n//             <option value=\"uploadSyllabus\">Upload Syllabus</option>\n//             <option value=\"uploadResult\">Upload Result</option>\n//             <option value=\"uploadExam\">Upload Exam</option>\n//           </select>\n//         </div>\n//         <div>\n//           <label>Data:</label>\n//           <input type=\"text\" value={data} onChange={handleDataChange} required />\n//         </div>\n//         {operation === 'uploadImage' || operation === 'uploadSyllabus' ? (\n//           <div>\n//             <label>File:</label>\n//             <input type=\"file\" onChange={handleFileChange} />\n//           </div>\n//         ) : null}\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// }\n\n// export default Manage;\n\n// Manage.jsx\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Manage = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploaded, setUploaded] = useState(false);\n  const [error, setError] = useState(null);\n  const handleImageChange = event => {\n    setImage(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    setUploading(true);\n    setError(null);\n    const formData = new FormData();\n    formData.append('image', image);\n    try {\n      const response = await fetch('/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        setUploaded(true);\n      } else {\n        setError('Failed to upload image');\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), uploading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Uploading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 9\n    }, this) : uploaded ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Image uploaded successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 11\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select an image to upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 451,\n    columnNumber: 5\n  }, this);\n};\n_s(Manage, \"rxjVFfP70IzrSQH1c6c7e0nz0Wo=\");\n_c = Manage;\nexport default Manage;\nvar _c;\n$RefreshReg$(_c, \"Manage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Manage","_s","image","setImage","uploading","setUploading","uploaded","setUploaded","error","setError","handleImageChange","event","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","ok","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","style","color","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/AI-SCET Website/aiscet/src/components/Manage.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Manage = () => {\r\n//   const [selectedOption, setSelectedOption] = useState('');\r\n//   const [action, setAction] = useState('');\r\n//   const [formData, setFormData] = useState({});\r\n\r\n//   const handleOptionChange = (e) => {\r\n//     setSelectedOption(e.target.value);\r\n//     setAction('');\r\n//     setFormData({});\r\n//   };\r\n\r\n//   const handleActionChange = (e) => {\r\n//     setAction(e.target.value);\r\n//     setFormData({});\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const handleFileChange = (e) => {\r\n//     const { name, files } = e.target;\r\n//     setFormData({ ...formData, [name]: files[0] });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const form = new FormData();\r\n//     for (const key in formData) {\r\n//       form.append(key, formData[key]);\r\n//     }\r\n\r\n//     try {\r\n//       const response = await axios.post(`/${selectedOption}/${action}`, form, {\r\n//         headers: { 'Content-Type': 'multipart/form-data' }\r\n//       });\r\n//       console.log(response.data);\r\n//     } catch (error) {\r\n//       console.error('There was an error!', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Manage</h1>\r\n//       <div>\r\n//         <label>\r\n//           Select Option:\r\n//           <select value={selectedOption} onChange={handleOptionChange}>\r\n//             <option value=\"\">--Select--</option>\r\n//             <option value=\"images\">Images</option>\r\n//             <option value=\"syllabus\">Syllabus</option>\r\n//             <option value=\"result\">Result</option>\r\n//             <option value=\"exam\">Exam</option>\r\n//           </select>\r\n//         </label>\r\n//       </div>\r\n\r\n//       {selectedOption && (\r\n//         <div>\r\n//           <label>\r\n//             Select Action:\r\n//             <select value={action} onChange={handleActionChange}>\r\n//               <option value=\"\">--Select--</option>\r\n//               <option value=\"insert\">Insert</option>\r\n//               <option value=\"update\">Update</option>\r\n//               <option value=\"delete\">Delete</option>\r\n//             </select>\r\n//           </label>\r\n//         </div>\r\n//       )}\r\n\r\n//       {action && (\r\n//         <form onSubmit={handleSubmit}>\r\n//           {selectedOption === 'images' && (\r\n//             <>\r\n//               <label>\r\n//                 Upload Image:\r\n//                 <input type=\"file\" name=\"image\" onChange={handleFileChange} />\r\n//               </label>\r\n//             </>\r\n//           )}\r\n\r\n//           {selectedOption === 'syllabus' && (\r\n//             <>\r\n//               <label>\r\n//                 Subcode:\r\n//                 <input type=\"text\" name=\"subcode\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Semester:\r\n//                 <input type=\"text\" name=\"sem\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Name:\r\n//                 <input type=\"text\" name=\"name\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Credit:\r\n//                 <input type=\"text\" name=\"credit\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Syllabus File:\r\n//                 <input type=\"file\" name=\"syllabusFile\" onChange={handleFileChange} />\r\n//               </label>\r\n//             </>\r\n//           )}\r\n\r\n//           {selectedOption === 'result' && (\r\n//             <>\r\n//               <label>\r\n//                 Semester:\r\n//                 <input type=\"text\" name=\"sem\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Result File:\r\n//                 <input type=\"file\" name=\"resultFile\" onChange={handleFileChange} />\r\n//               </label>\r\n//             </>\r\n//           )}\r\n\r\n//           {selectedOption === 'exam' && (\r\n//             <>\r\n//               <label>\r\n//                 Exam Type:\r\n//                 <input type=\"text\" name=\"examtype\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Year:\r\n//                 <input type=\"text\" name=\"year\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Semester:\r\n//                 <input type=\"text\" name=\"sem\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Class:\r\n//                 <input type=\"text\" name=\"class\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Schedule:\r\n//                 <input type=\"text\" name=\"schedule\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Seating Arrangement:\r\n//                 <input type=\"text\" name=\"seatingArrangement\" onChange={handleInputChange} />\r\n//               </label>\r\n//             </>\r\n//           )}\r\n\r\n//           <button type=\"submit\">Submit</button>\r\n//         </form>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Manage;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Manage = () => {\r\n//   const [selectedOption, setSelectedOption] = useState('');\r\n//   const [action, setAction] = useState('');\r\n//   const [formData, setFormData] = useState({});\r\n\r\n//   // Handle option selection change\r\n//   const handleOptionChange = (e) => {\r\n//     setSelectedOption(e.target.value);\r\n//     setAction('');\r\n//     setFormData({});\r\n//   };\r\n\r\n//   // Handle action selection change\r\n//   const handleActionChange = (e) => {\r\n//     setAction(e.target.value);\r\n//     setFormData({});\r\n//   };\r\n\r\n//   // Handle input field change\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   // Handle file field change\r\n//   const handleFileChange = (e) => {\r\n//     const { name, files } = e.target;\r\n//     setFormData({ ...formData, [name]: files[0] });\r\n//   };\r\n\r\n//   // Handle form submission\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const form = new FormData();\r\n//     for (const key in formData) {\r\n//       form.append(key, formData[key]);\r\n//     }\r\n\r\n//     try {\r\n//       const response = await axios.post(`/${selectedOption}/${action}`, form, {\r\n//         headers: { 'Content-Type': 'multipart/form-data' },\r\n//       });\r\n//       console.log(response.data);\r\n//     } catch (error) {\r\n//       console.error('There was an error!', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Manage</h1>\r\n//       <div>\r\n//         <label>\r\n//           Select Option:\r\n//           <select value={selectedOption} onChange={handleOptionChange}>\r\n//             <option value=\"\">--Select--</option>\r\n//             <option value=\"images\">Images</option>\r\n//             <option value=\"syllabus\">Syllabus</option>\r\n//             <option value=\"result\">Result</option>\r\n//             <option value=\"exam\">Exam</option>\r\n//           </select>\r\n//         </label>\r\n//       </div>\r\n\r\n//       {selectedOption && (\r\n//         <div>\r\n//           <label>\r\n//             Select Action:\r\n//             <select value={action} onChange={handleActionChange}>\r\n//               <option value=\"\">--Select--</option>\r\n//               <option value=\"insert\">Insert</option>\r\n//               <option value=\"update\">Update</option>\r\n//               <option value=\"delete\">Delete</option>\r\n//             </select>\r\n//           </label>\r\n//         </div>\r\n//       )}\r\n\r\n//       {action && (\r\n//         <form onSubmit={handleSubmit}>\r\n//           {selectedOption === 'images' && (\r\n//             <>\r\n//               <label>\r\n//                 Upload Image:\r\n//                 <input type=\"file\" name=\"image\" onChange={handleFileChange} />\r\n//               </label>\r\n//             </>\r\n//           )}\r\n\r\n//           {selectedOption === 'syllabus' && (\r\n//             <>\r\n//               <label>\r\n//                 Subcode:\r\n//                 <input type=\"text\" name=\"subcode\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Semester:\r\n//                 <input type=\"text\" name=\"sem\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Name:\r\n//                 <input type=\"text\" name=\"name\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Credit:\r\n//                 <input type=\"text\" name=\"credit\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Syllabus File:\r\n//                 <input type=\"file\" name=\"syllabusFile\" onChange={handleFileChange} />\r\n//               </label>\r\n//             </>\r\n//           )}\r\n\r\n//           {selectedOption === 'result' && (\r\n//             <>\r\n//               <label>\r\n//                 Semester:\r\n//                 <input type=\"text\" name=\"sem\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Result File:\r\n//                 <input type=\"file\" name=\"resultFile\" onChange={handleFileChange} />\r\n//               </label>\r\n//             </>\r\n//           )}\r\n\r\n//           {selectedOption === 'exam' && (\r\n//             <>\r\n//               <label>\r\n//                 Exam Type:\r\n//                 <input type=\"text\" name=\"examtype\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Year:\r\n//                 <input type=\"text\" name=\"year\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Semester:\r\n//                 <input type=\"text\" name=\"sem\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Class:\r\n//                 <input type=\"text\" name=\"class\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Schedule:\r\n//                 <input type=\"text\" name=\"schedule\" onChange={handleInputChange} />\r\n//               </label>\r\n//               <label>\r\n//                 Seating Arrangement:\r\n//                 <input type=\"text\" name=\"seatingArrangement\" onChange={handleInputChange} />\r\n//               </label>\r\n//             </>\r\n//           )}\r\n\r\n//           <button type=\"submit\">Submit</button>\r\n//         </form>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Manage;\r\n\r\n\r\n        // updated\r\n// import React, { useState } from 'react';\r\n\r\n// function Manage() {\r\n//   const [operation, setOperation] = useState('');\r\n//   const [data, setData] = useState('');\r\n//   const [file, setFile] = useState(null);\r\n\r\n//   const handleOperationChange = (e) => {\r\n//     setOperation(e.target.value);\r\n//   };\r\n\r\n//   const handleDataChange = (e) => {\r\n//     setData(e.target.value);\r\n//   };\r\n\r\n//   const handleFileChange = (e) => {\r\n//     setFile(e.target.files[0]);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const formData = new FormData();\r\n//     formData.append('operation', operation);\r\n//     formData.append('data', data);\r\n//     if (file) {\r\n//       formData.append('file', file);\r\n//     }\r\n\r\n//     try {\r\n//       const response = await fetch('/manage', {\r\n//         method: 'POST',\r\n//         body: formData,\r\n//       });\r\n//       if (response.ok) {\r\n//         alert('Operation successful');\r\n//       } else {\r\n//         alert('Operation failed');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error:', error);\r\n//       alert('Operation failed');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Manage</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div>\r\n//           <label>Operation:</label>\r\n//           <select value={operation} onChange={handleOperationChange}>\r\n//             <option value=\"\">Select Operation</option>\r\n//             <option value=\"uploadImage\">Upload Image</option>\r\n//             <option value=\"uploadSyllabus\">Upload Syllabus</option>\r\n//             <option value=\"uploadResult\">Upload Result</option>\r\n//             <option value=\"uploadExam\">Upload Exam</option>\r\n//           </select>\r\n//         </div>\r\n//         <div>\r\n//           <label>Data:</label>\r\n//           <input type=\"text\" value={data} onChange={handleDataChange} required />\r\n//         </div>\r\n//         {operation === 'uploadImage' || operation === 'uploadSyllabus' ? (\r\n//           <div>\r\n//             <label>File:</label>\r\n//             <input type=\"file\" onChange={handleFileChange} />\r\n//           </div>\r\n//         ) : null}\r\n//         <button type=\"submit\">Submit</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Manage;\r\n\r\n\r\n// Manage.jsx\r\nimport React, { useState } from 'react';\r\n\r\nconst Manage = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploaded, setUploaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleImageChange = (event) => {\r\n    setImage(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    setUploading(true);\r\n    setError(null);\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', image);\r\n\r\n    try {\r\n      const response = await fetch('/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        setUploaded(true);\r\n      } else {\r\n        setError('Failed to upload image');\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Manage Images</h1>\r\n      <input type=\"file\" onChange={handleImageChange} />\r\n      <button onClick={handleUpload}>Upload Image</button>\r\n      {uploading ? (\r\n        <p>Uploading...</p>\r\n      ) : (\r\n        uploaded ? (\r\n          <p>Image uploaded successfully!</p>\r\n        ) : (\r\n          error ? (\r\n            <p style={{ color: 'red' }}>{error}</p>\r\n          ) : (\r\n            <p>Select an image to upload</p>\r\n          )\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Manage;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGQ;AACR;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,iBAAiB,GAAIC,KAAK,IAAK;IACnCR,QAAQ,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BT,YAAY,CAAC,IAAI,CAAC;IAClBI,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMM,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEf,KAAK,CAAC;IAE/B,IAAI;MACF,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAS,EAAE;QACtCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACff,WAAW,CAAC,IAAI,CAAC;MACnB,CAAC,MAAM;QACLE,QAAQ,CAAC,wBAAwB,CAAC;MACpC;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACe,OAAO,CAAC;IACzB,CAAC,SAAS;MACRlB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB7B,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEpB;IAAkB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClD7B,OAAA;MAAQgC,OAAO,EAAEjB,YAAa;MAAAU,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACnDxB,SAAS,gBACRL,OAAA;MAAAyB,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEnBtB,QAAQ,gBACNP,OAAA;MAAAyB,QAAA,EAAG;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEnCpB,KAAK,gBACHT,OAAA;MAAGiC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAT,QAAA,EAAEhB;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEvC7B,OAAA;MAAAyB,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAGpC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAvDID,MAAM;AAAAkC,EAAA,GAANlC,MAAM;AAyDZ,eAAeA,MAAM;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}