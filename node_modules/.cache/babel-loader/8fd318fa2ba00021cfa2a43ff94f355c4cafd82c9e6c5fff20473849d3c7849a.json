{"ast":null,"code":"/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev.js';\nimport { ensureTokenIsValid, secretToken } from './secrets.js';\nimport { getTrustedTypes, getTrustedTypesPolicy } from './trusted_types.js';\n/**\n * Runtime implementation of `TrustedScriptURL` in browsers that don't support\n * it.\n */\nclass ResourceUrlImpl {\n  constructor(url, token) {\n    ensureTokenIsValid(token);\n    this.privateDoNotAccessOrElseWrappedResourceUrl = url;\n  }\n  toString() {\n    return this.privateDoNotAccessOrElseWrappedResourceUrl.toString();\n  }\n}\nconst GlobalTrustedScriptURL = typeof window !== 'undefined' ? window.TrustedScriptURL : undefined;\n/**\n * Also exports the constructor so that instanceof checks work.\n */\nexport const TrustedResourceUrl = GlobalTrustedScriptURL !== null && GlobalTrustedScriptURL !== void 0 ? GlobalTrustedScriptURL : ResourceUrlImpl;\n/**\n * Builds a new `TrustedResourceUrl` from the given string, without\n * enforcing safety guarantees. It may cause side effects by creating a Trusted\n * Types policy. This shouldn't be exposed to application developers, and must\n * only be used as a step towards safe builders or safe constants.\n */\nexport function createResourceUrlInternal(url) {\n  var _a;\n  /** @noinline */\n  const noinlineUrl = url;\n  const trustedScriptURL = (_a = getTrustedTypesPolicy()) === null || _a === void 0 ? void 0 : _a.createScriptURL(noinlineUrl);\n  return trustedScriptURL !== null && trustedScriptURL !== void 0 ? trustedScriptURL : new ResourceUrlImpl(noinlineUrl, secretToken);\n}\n/**\n * Checks if the given value is a `TrustedResourceUrl` instance.\n */\nexport function isResourceUrl(value) {\n  var _a;\n  return ((_a = getTrustedTypes()) === null || _a === void 0 ? void 0 : _a.isScriptURL(value)) || value instanceof ResourceUrlImpl;\n}\n/**\n * Returns the value of the passed `TrustedResourceUrl` object while ensuring it\n * has the correct type.\n *\n * Returns a native `TrustedScriptURL` or a string if Trusted Types are\n * disabled.\n */\nexport function unwrapResourceUrl(value) {\n  var _a;\n  if ((_a = getTrustedTypes()) === null || _a === void 0 ? void 0 : _a.isScriptURL(value)) {\n    return value;\n  } else if (value instanceof ResourceUrlImpl) {\n    return value.privateDoNotAccessOrElseWrappedResourceUrl;\n  } else {\n    let message = '';\n    if (process.env.NODE_ENV !== 'production') {\n      message = 'Unexpected type when unwrapping TrustedResourceUrl';\n    }\n    throw new Error(message);\n  }\n}","map":{"version":3,"names":["ensureTokenIsValid","secretToken","getTrustedTypes","getTrustedTypesPolicy","ResourceUrlImpl","constructor","url","token","privateDoNotAccessOrElseWrappedResourceUrl","toString","GlobalTrustedScriptURL","window","TrustedScriptURL","undefined","TrustedResourceUrl","createResourceUrlInternal","_a","noinlineUrl","trustedScriptURL","createScriptURL","isResourceUrl","value","isScriptURL","unwrapResourceUrl","message","process","env","NODE_ENV","Error"],"sources":["E:/HTML/Udemy_Full Stack Web/AI-SCET Website/aiscet/node_modules/safevalues/dist/mjs/internals/resource_url_impl.js"],"sourcesContent":["/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev.js';\nimport { ensureTokenIsValid, secretToken } from './secrets.js';\nimport { getTrustedTypes, getTrustedTypesPolicy } from './trusted_types.js';\n/**\n * Runtime implementation of `TrustedScriptURL` in browsers that don't support\n * it.\n */\nclass ResourceUrlImpl {\n    constructor(url, token) {\n        ensureTokenIsValid(token);\n        this.privateDoNotAccessOrElseWrappedResourceUrl = url;\n    }\n    toString() {\n        return this.privateDoNotAccessOrElseWrappedResourceUrl.toString();\n    }\n}\nconst GlobalTrustedScriptURL = typeof window !== 'undefined' ? window.TrustedScriptURL : undefined;\n/**\n * Also exports the constructor so that instanceof checks work.\n */\nexport const TrustedResourceUrl = (GlobalTrustedScriptURL !== null && GlobalTrustedScriptURL !== void 0 ? GlobalTrustedScriptURL : ResourceUrlImpl);\n/**\n * Builds a new `TrustedResourceUrl` from the given string, without\n * enforcing safety guarantees. It may cause side effects by creating a Trusted\n * Types policy. This shouldn't be exposed to application developers, and must\n * only be used as a step towards safe builders or safe constants.\n */\nexport function createResourceUrlInternal(url) {\n    var _a;\n    /** @noinline */\n    const noinlineUrl = url;\n    const trustedScriptURL = (_a = getTrustedTypesPolicy()) === null || _a === void 0 ? void 0 : _a.createScriptURL(noinlineUrl);\n    return (trustedScriptURL !== null && trustedScriptURL !== void 0 ? trustedScriptURL : new ResourceUrlImpl(noinlineUrl, secretToken));\n}\n/**\n * Checks if the given value is a `TrustedResourceUrl` instance.\n */\nexport function isResourceUrl(value) {\n    var _a;\n    return (((_a = getTrustedTypes()) === null || _a === void 0 ? void 0 : _a.isScriptURL(value)) || value instanceof ResourceUrlImpl);\n}\n/**\n * Returns the value of the passed `TrustedResourceUrl` object while ensuring it\n * has the correct type.\n *\n * Returns a native `TrustedScriptURL` or a string if Trusted Types are\n * disabled.\n */\nexport function unwrapResourceUrl(value) {\n    var _a;\n    if ((_a = getTrustedTypes()) === null || _a === void 0 ? void 0 : _a.isScriptURL(value)) {\n        return value;\n    }\n    else if (value instanceof ResourceUrlImpl) {\n        return value.privateDoNotAccessOrElseWrappedResourceUrl;\n    }\n    else {\n        let message = '';\n        if (process.env.NODE_ENV !== 'production') {\n            message = 'Unexpected type when unwrapping TrustedResourceUrl';\n        }\n        throw new Error(message);\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,uBAAuB;AAC9B,SAASA,kBAAkB,EAAEC,WAAW,QAAQ,cAAc;AAC9D,SAASC,eAAe,EAAEC,qBAAqB,QAAQ,oBAAoB;AAC3E;AACA;AACA;AACA;AACA,MAAMC,eAAe,CAAC;EAClBC,WAAWA,CAACC,GAAG,EAAEC,KAAK,EAAE;IACpBP,kBAAkB,CAACO,KAAK,CAAC;IACzB,IAAI,CAACC,0CAA0C,GAAGF,GAAG;EACzD;EACAG,QAAQA,CAAA,EAAG;IACP,OAAO,IAAI,CAACD,0CAA0C,CAACC,QAAQ,CAAC,CAAC;EACrE;AACJ;AACA,MAAMC,sBAAsB,GAAG,OAAOC,MAAM,KAAK,WAAW,GAAGA,MAAM,CAACC,gBAAgB,GAAGC,SAAS;AAClG;AACA;AACA;AACA,OAAO,MAAMC,kBAAkB,GAAIJ,sBAAsB,KAAK,IAAI,IAAIA,sBAAsB,KAAK,KAAK,CAAC,GAAGA,sBAAsB,GAAGN,eAAgB;AACnJ;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASW,yBAAyBA,CAACT,GAAG,EAAE;EAC3C,IAAIU,EAAE;EACN;EACA,MAAMC,WAAW,GAAGX,GAAG;EACvB,MAAMY,gBAAgB,GAAG,CAACF,EAAE,GAAGb,qBAAqB,CAAC,CAAC,MAAM,IAAI,IAAIa,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,eAAe,CAACF,WAAW,CAAC;EAC5H,OAAQC,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAGA,gBAAgB,GAAG,IAAId,eAAe,CAACa,WAAW,EAAEhB,WAAW,CAAC;AACvI;AACA;AACA;AACA;AACA,OAAO,SAASmB,aAAaA,CAACC,KAAK,EAAE;EACjC,IAAIL,EAAE;EACN,OAAQ,CAAC,CAACA,EAAE,GAAGd,eAAe,CAAC,CAAC,MAAM,IAAI,IAAIc,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACM,WAAW,CAACD,KAAK,CAAC,KAAKA,KAAK,YAAYjB,eAAe;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASmB,iBAAiBA,CAACF,KAAK,EAAE;EACrC,IAAIL,EAAE;EACN,IAAI,CAACA,EAAE,GAAGd,eAAe,CAAC,CAAC,MAAM,IAAI,IAAIc,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACM,WAAW,CAACD,KAAK,CAAC,EAAE;IACrF,OAAOA,KAAK;EAChB,CAAC,MACI,IAAIA,KAAK,YAAYjB,eAAe,EAAE;IACvC,OAAOiB,KAAK,CAACb,0CAA0C;EAC3D,CAAC,MACI;IACD,IAAIgB,OAAO,GAAG,EAAE;IAChB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvCH,OAAO,GAAG,oDAAoD;IAClE;IACA,MAAM,IAAII,KAAK,CAACJ,OAAO,CAAC;EAC5B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}