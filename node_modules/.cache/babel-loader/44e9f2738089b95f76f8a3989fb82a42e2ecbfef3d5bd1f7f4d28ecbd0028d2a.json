{"ast":null,"code":"import { useContext, useMemo } from 'react';\nimport { any, string, oneOf, bool, oneOfType, node, func } from 'prop-types';\nimport { jsx } from 'react/jsx-runtime';\nimport { useItemState } from '../hooks/useItemState.js';\nimport { EventHandlersContext, RadioGroupContext, roleMenuitem, menuClass, menuItemClass, roleNone, Keys } from '../utils/constants.js';\nimport { useCombinedRef } from '../hooks/useCombinedRef.js';\nimport { useBEM } from '../hooks/useBEM.js';\nimport { withHovering } from '../utils/withHovering.js';\nimport { stylePropTypes } from '../utils/propTypes.js';\nimport { mergeProps, commonProps, safeCall } from '../utils/utils.js';\nconst MenuItem = /*#__PURE__*/withHovering('MenuItem', function MenuItem({\n  className,\n  value,\n  href,\n  type,\n  checked,\n  disabled,\n  children,\n  onClick,\n  isHovering,\n  itemRef,\n  externalRef,\n  ...restProps\n}) {\n  const isDisabled = !!disabled;\n  const {\n    setHover,\n    ...restStateProps\n  } = useItemState(itemRef, itemRef, isHovering, isDisabled);\n  const eventHandlers = useContext(EventHandlersContext);\n  const radioGroup = useContext(RadioGroupContext);\n  const isRadio = type === 'radio';\n  const isCheckBox = type === 'checkbox';\n  const isAnchor = !!href && !isDisabled && !isRadio && !isCheckBox;\n  const isChecked = isRadio ? radioGroup.value === value : isCheckBox ? !!checked : false;\n  const handleClick = e => {\n    if (isDisabled) {\n      e.stopPropagation();\n      e.preventDefault();\n      return;\n    }\n    const event = {\n      value,\n      syntheticEvent: e\n    };\n    if (e.key !== undefined) event.key = e.key;\n    if (isCheckBox) event.checked = !isChecked;\n    if (isRadio) event.name = radioGroup.name;\n    safeCall(onClick, event);\n    if (isRadio) safeCall(radioGroup.onRadioChange, event);\n    eventHandlers.handleClick(event, isCheckBox || isRadio);\n  };\n  const handleKeyDown = e => {\n    if (!isHovering) return;\n    switch (e.key) {\n      case Keys.ENTER:\n        e.preventDefault();\n      case Keys.SPACE:\n        isAnchor ? itemRef.current.click() : handleClick(e);\n    }\n  };\n  const modifiers = useMemo(() => ({\n    type,\n    disabled: isDisabled,\n    hover: isHovering,\n    checked: isChecked,\n    anchor: isAnchor\n  }), [type, isDisabled, isHovering, isChecked, isAnchor]);\n  const mergedProps = mergeProps({\n    ...restStateProps,\n    onPointerDown: setHover,\n    onKeyDown: handleKeyDown,\n    onClick: handleClick\n  }, restProps);\n  const menuItemProps = {\n    role: isRadio ? 'menuitemradio' : isCheckBox ? 'menuitemcheckbox' : roleMenuitem,\n    'aria-checked': isRadio || isCheckBox ? isChecked : undefined,\n    ...commonProps(isDisabled, isHovering),\n    ...mergedProps,\n    ref: useCombinedRef(externalRef, itemRef),\n    className: useBEM({\n      block: menuClass,\n      element: menuItemClass,\n      modifiers,\n      className\n    }),\n    children: useMemo(() => safeCall(children, modifiers), [children, modifiers])\n  };\n  return isAnchor ? /*#__PURE__*/jsx(\"li\", {\n    role: roleNone,\n    children: /*#__PURE__*/jsx(\"a\", {\n      href: href,\n      ...menuItemProps\n    })\n  }) : /*#__PURE__*/jsx(\"li\", {\n    ...menuItemProps\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  ...stylePropTypes(),\n  value: any,\n  href: string,\n  type: /*#__PURE__*/oneOf(['checkbox', 'radio']),\n  checked: bool,\n  disabled: bool,\n  children: /*#__PURE__*/oneOfType([node, func]),\n  onClick: func\n} : void 0;\nexport { MenuItem };","map":{"version":3,"names":["useContext","useMemo","any","string","oneOf","bool","oneOfType","node","func","jsx","useItemState","EventHandlersContext","RadioGroupContext","roleMenuitem","menuClass","menuItemClass","roleNone","Keys","useCombinedRef","useBEM","withHovering","stylePropTypes","mergeProps","commonProps","safeCall","MenuItem","className","value","href","type","checked","disabled","children","onClick","isHovering","itemRef","externalRef","restProps","isDisabled","setHover","restStateProps","eventHandlers","radioGroup","isRadio","isCheckBox","isAnchor","isChecked","handleClick","e","stopPropagation","preventDefault","event","syntheticEvent","key","undefined","name","onRadioChange","handleKeyDown","ENTER","SPACE","current","click","modifiers","hover","anchor","mergedProps","onPointerDown","onKeyDown","menuItemProps","role","ref","block","element","process","env","NODE_ENV","propTypes"],"sources":["E:/HTML/Udemy_Full Stack Web/AI-SCET Website/aiscet/node_modules/@szhsin/react-menu/dist/es/components/MenuItem.js"],"sourcesContent":["import { useContext, useMemo } from 'react';\nimport { any, string, oneOf, bool, oneOfType, node, func } from 'prop-types';\nimport { jsx } from 'react/jsx-runtime';\nimport { useItemState } from '../hooks/useItemState.js';\nimport { EventHandlersContext, RadioGroupContext, roleMenuitem, menuClass, menuItemClass, roleNone, Keys } from '../utils/constants.js';\nimport { useCombinedRef } from '../hooks/useCombinedRef.js';\nimport { useBEM } from '../hooks/useBEM.js';\nimport { withHovering } from '../utils/withHovering.js';\nimport { stylePropTypes } from '../utils/propTypes.js';\nimport { mergeProps, commonProps, safeCall } from '../utils/utils.js';\n\nconst MenuItem = /*#__PURE__*/withHovering('MenuItem', function MenuItem({\n  className,\n  value,\n  href,\n  type,\n  checked,\n  disabled,\n  children,\n  onClick,\n  isHovering,\n  itemRef,\n  externalRef,\n  ...restProps\n}) {\n  const isDisabled = !!disabled;\n  const {\n    setHover,\n    ...restStateProps\n  } = useItemState(itemRef, itemRef, isHovering, isDisabled);\n  const eventHandlers = useContext(EventHandlersContext);\n  const radioGroup = useContext(RadioGroupContext);\n  const isRadio = type === 'radio';\n  const isCheckBox = type === 'checkbox';\n  const isAnchor = !!href && !isDisabled && !isRadio && !isCheckBox;\n  const isChecked = isRadio ? radioGroup.value === value : isCheckBox ? !!checked : false;\n  const handleClick = e => {\n    if (isDisabled) {\n      e.stopPropagation();\n      e.preventDefault();\n      return;\n    }\n    const event = {\n      value,\n      syntheticEvent: e\n    };\n    if (e.key !== undefined) event.key = e.key;\n    if (isCheckBox) event.checked = !isChecked;\n    if (isRadio) event.name = radioGroup.name;\n    safeCall(onClick, event);\n    if (isRadio) safeCall(radioGroup.onRadioChange, event);\n    eventHandlers.handleClick(event, isCheckBox || isRadio);\n  };\n  const handleKeyDown = e => {\n    if (!isHovering) return;\n    switch (e.key) {\n      case Keys.ENTER:\n        e.preventDefault();\n      case Keys.SPACE:\n        isAnchor ? itemRef.current.click() : handleClick(e);\n    }\n  };\n  const modifiers = useMemo(() => ({\n    type,\n    disabled: isDisabled,\n    hover: isHovering,\n    checked: isChecked,\n    anchor: isAnchor\n  }), [type, isDisabled, isHovering, isChecked, isAnchor]);\n  const mergedProps = mergeProps({\n    ...restStateProps,\n    onPointerDown: setHover,\n    onKeyDown: handleKeyDown,\n    onClick: handleClick\n  }, restProps);\n  const menuItemProps = {\n    role: isRadio ? 'menuitemradio' : isCheckBox ? 'menuitemcheckbox' : roleMenuitem,\n    'aria-checked': isRadio || isCheckBox ? isChecked : undefined,\n    ...commonProps(isDisabled, isHovering),\n    ...mergedProps,\n    ref: useCombinedRef(externalRef, itemRef),\n    className: useBEM({\n      block: menuClass,\n      element: menuItemClass,\n      modifiers,\n      className\n    }),\n    children: useMemo(() => safeCall(children, modifiers), [children, modifiers])\n  };\n  return isAnchor ? /*#__PURE__*/jsx(\"li\", {\n    role: roleNone,\n    children: /*#__PURE__*/jsx(\"a\", {\n      href: href,\n      ...menuItemProps\n    })\n  }) : /*#__PURE__*/jsx(\"li\", {\n    ...menuItemProps\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  ...stylePropTypes(),\n  value: any,\n  href: string,\n  type: /*#__PURE__*/oneOf(['checkbox', 'radio']),\n  checked: bool,\n  disabled: bool,\n  children: /*#__PURE__*/oneOfType([node, func]),\n  onClick: func\n} : void 0;\n\nexport { MenuItem };\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAC3C,SAASC,GAAG,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,SAAS,EAAEC,IAAI,EAAEC,IAAI,QAAQ,YAAY;AAC5E,SAASC,GAAG,QAAQ,mBAAmB;AACvC,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,oBAAoB,EAAEC,iBAAiB,EAAEC,YAAY,EAAEC,SAAS,EAAEC,aAAa,EAAEC,QAAQ,EAAEC,IAAI,QAAQ,uBAAuB;AACvI,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,UAAU,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,mBAAmB;AAErE,MAAMC,QAAQ,GAAG,aAAaL,YAAY,CAAC,UAAU,EAAE,SAASK,QAAQA,CAAC;EACvEC,SAAS;EACTC,KAAK;EACLC,IAAI;EACJC,IAAI;EACJC,OAAO;EACPC,QAAQ;EACRC,QAAQ;EACRC,OAAO;EACPC,UAAU;EACVC,OAAO;EACPC,WAAW;EACX,GAAGC;AACL,CAAC,EAAE;EACD,MAAMC,UAAU,GAAG,CAAC,CAACP,QAAQ;EAC7B,MAAM;IACJQ,QAAQ;IACR,GAAGC;EACL,CAAC,GAAG9B,YAAY,CAACyB,OAAO,EAAEA,OAAO,EAAED,UAAU,EAAEI,UAAU,CAAC;EAC1D,MAAMG,aAAa,GAAGzC,UAAU,CAACW,oBAAoB,CAAC;EACtD,MAAM+B,UAAU,GAAG1C,UAAU,CAACY,iBAAiB,CAAC;EAChD,MAAM+B,OAAO,GAAGd,IAAI,KAAK,OAAO;EAChC,MAAMe,UAAU,GAAGf,IAAI,KAAK,UAAU;EACtC,MAAMgB,QAAQ,GAAG,CAAC,CAACjB,IAAI,IAAI,CAACU,UAAU,IAAI,CAACK,OAAO,IAAI,CAACC,UAAU;EACjE,MAAME,SAAS,GAAGH,OAAO,GAAGD,UAAU,CAACf,KAAK,KAAKA,KAAK,GAAGiB,UAAU,GAAG,CAAC,CAACd,OAAO,GAAG,KAAK;EACvF,MAAMiB,WAAW,GAAGC,CAAC,IAAI;IACvB,IAAIV,UAAU,EAAE;MACdU,CAAC,CAACC,eAAe,CAAC,CAAC;MACnBD,CAAC,CAACE,cAAc,CAAC,CAAC;MAClB;IACF;IACA,MAAMC,KAAK,GAAG;MACZxB,KAAK;MACLyB,cAAc,EAAEJ;IAClB,CAAC;IACD,IAAIA,CAAC,CAACK,GAAG,KAAKC,SAAS,EAAEH,KAAK,CAACE,GAAG,GAAGL,CAAC,CAACK,GAAG;IAC1C,IAAIT,UAAU,EAAEO,KAAK,CAACrB,OAAO,GAAG,CAACgB,SAAS;IAC1C,IAAIH,OAAO,EAAEQ,KAAK,CAACI,IAAI,GAAGb,UAAU,CAACa,IAAI;IACzC/B,QAAQ,CAACS,OAAO,EAAEkB,KAAK,CAAC;IACxB,IAAIR,OAAO,EAAEnB,QAAQ,CAACkB,UAAU,CAACc,aAAa,EAAEL,KAAK,CAAC;IACtDV,aAAa,CAACM,WAAW,CAACI,KAAK,EAAEP,UAAU,IAAID,OAAO,CAAC;EACzD,CAAC;EACD,MAAMc,aAAa,GAAGT,CAAC,IAAI;IACzB,IAAI,CAACd,UAAU,EAAE;IACjB,QAAQc,CAAC,CAACK,GAAG;MACX,KAAKpC,IAAI,CAACyC,KAAK;QACbV,CAAC,CAACE,cAAc,CAAC,CAAC;MACpB,KAAKjC,IAAI,CAAC0C,KAAK;QACbd,QAAQ,GAAGV,OAAO,CAACyB,OAAO,CAACC,KAAK,CAAC,CAAC,GAAGd,WAAW,CAACC,CAAC,CAAC;IACvD;EACF,CAAC;EACD,MAAMc,SAAS,GAAG7D,OAAO,CAAC,OAAO;IAC/B4B,IAAI;IACJE,QAAQ,EAAEO,UAAU;IACpByB,KAAK,EAAE7B,UAAU;IACjBJ,OAAO,EAAEgB,SAAS;IAClBkB,MAAM,EAAEnB;EACV,CAAC,CAAC,EAAE,CAAChB,IAAI,EAAES,UAAU,EAAEJ,UAAU,EAAEY,SAAS,EAAED,QAAQ,CAAC,CAAC;EACxD,MAAMoB,WAAW,GAAG3C,UAAU,CAAC;IAC7B,GAAGkB,cAAc;IACjB0B,aAAa,EAAE3B,QAAQ;IACvB4B,SAAS,EAAEV,aAAa;IACxBxB,OAAO,EAAEc;EACX,CAAC,EAAEV,SAAS,CAAC;EACb,MAAM+B,aAAa,GAAG;IACpBC,IAAI,EAAE1B,OAAO,GAAG,eAAe,GAAGC,UAAU,GAAG,kBAAkB,GAAG/B,YAAY;IAChF,cAAc,EAAE8B,OAAO,IAAIC,UAAU,GAAGE,SAAS,GAAGQ,SAAS;IAC7D,GAAG/B,WAAW,CAACe,UAAU,EAAEJ,UAAU,CAAC;IACtC,GAAG+B,WAAW;IACdK,GAAG,EAAEpD,cAAc,CAACkB,WAAW,EAAED,OAAO,CAAC;IACzCT,SAAS,EAAEP,MAAM,CAAC;MAChBoD,KAAK,EAAEzD,SAAS;MAChB0D,OAAO,EAAEzD,aAAa;MACtB+C,SAAS;MACTpC;IACF,CAAC,CAAC;IACFM,QAAQ,EAAE/B,OAAO,CAAC,MAAMuB,QAAQ,CAACQ,QAAQ,EAAE8B,SAAS,CAAC,EAAE,CAAC9B,QAAQ,EAAE8B,SAAS,CAAC;EAC9E,CAAC;EACD,OAAOjB,QAAQ,GAAG,aAAapC,GAAG,CAAC,IAAI,EAAE;IACvC4D,IAAI,EAAErD,QAAQ;IACdgB,QAAQ,EAAE,aAAavB,GAAG,CAAC,GAAG,EAAE;MAC9BmB,IAAI,EAAEA,IAAI;MACV,GAAGwC;IACL,CAAC;EACH,CAAC,CAAC,GAAG,aAAa3D,GAAG,CAAC,IAAI,EAAE;IAC1B,GAAG2D;EACL,CAAC,CAAC;AACJ,CAAC,CAAC;AACFK,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGlD,QAAQ,CAACmD,SAAS,GAAG;EAC3D,GAAGvD,cAAc,CAAC,CAAC;EACnBM,KAAK,EAAEzB,GAAG;EACV0B,IAAI,EAAEzB,MAAM;EACZ0B,IAAI,EAAE,aAAazB,KAAK,CAAC,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;EAC/C0B,OAAO,EAAEzB,IAAI;EACb0B,QAAQ,EAAE1B,IAAI;EACd2B,QAAQ,EAAE,aAAa1B,SAAS,CAAC,CAACC,IAAI,EAAEC,IAAI,CAAC,CAAC;EAC9CyB,OAAO,EAAEzB;AACX,CAAC,GAAG,KAAK,CAAC;AAEV,SAASiB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}