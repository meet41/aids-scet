{"ast":null,"code":"/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev.js';\nimport { assertIsTemplateObject } from '../internals/string_literal.js';\nimport { createStyleSheetInternal, unwrapStyleSheet } from '../internals/style_sheet_impl.js';\n/**\n * Creates a SafeStyleSheet object from a template literal (without any\n * embedded expressions).\n *\n * This function is a template literal tag function. It should be called with\n * a template literal that does not contain any expressions. For example,\n *                         safeStyleSheet`foo`;\n * The argument must not have any < or > characters in it. This is so that\n * SafeStyleSheet's contract is preserved, allowing the SafeStyleSheet to\n * correctly be interpreted as a sequence of CSS declarations and without\n * affecting the syntactic structure of any surrounding CSS and HTML.\n *\n * @param templateObj This contains the literal part of the template literal.\n */\nexport function safeStyleSheet(templateObj) {\n  if (process.env.NODE_ENV !== 'production') {\n    assertIsTemplateObject(templateObj, 0);\n  }\n  const styleSheet = templateObj[0];\n  if (process.env.NODE_ENV !== 'production') {\n    if (/</.test(styleSheet)) {\n      throw new Error(`'<' character is forbidden in styleSheet string: ${styleSheet}`);\n    }\n  }\n  return createStyleSheetInternal(styleSheet);\n}\n/**\n * Creates a `SafeStyleSheet` value by concatenating multiple\n * `SafeStyleSheet`s.\n */\nexport function concatStyleSheets(sheets) {\n  return createStyleSheetInternal(sheets.map(unwrapStyleSheet).join(''));\n}","map":{"version":3,"names":["assertIsTemplateObject","createStyleSheetInternal","unwrapStyleSheet","safeStyleSheet","templateObj","process","env","NODE_ENV","styleSheet","test","Error","concatStyleSheets","sheets","map","join"],"sources":["E:/HTML/Udemy_Full Stack Web/AI-SCET Website/aiscet/node_modules/safevalues/dist/mjs/builders/style_sheet_builders.js"],"sourcesContent":["/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev.js';\nimport { assertIsTemplateObject } from '../internals/string_literal.js';\nimport { createStyleSheetInternal, unwrapStyleSheet, } from '../internals/style_sheet_impl.js';\n/**\n * Creates a SafeStyleSheet object from a template literal (without any\n * embedded expressions).\n *\n * This function is a template literal tag function. It should be called with\n * a template literal that does not contain any expressions. For example,\n *                         safeStyleSheet`foo`;\n * The argument must not have any < or > characters in it. This is so that\n * SafeStyleSheet's contract is preserved, allowing the SafeStyleSheet to\n * correctly be interpreted as a sequence of CSS declarations and without\n * affecting the syntactic structure of any surrounding CSS and HTML.\n *\n * @param templateObj This contains the literal part of the template literal.\n */\nexport function safeStyleSheet(templateObj) {\n    if (process.env.NODE_ENV !== 'production') {\n        assertIsTemplateObject(templateObj, 0);\n    }\n    const styleSheet = templateObj[0];\n    if (process.env.NODE_ENV !== 'production') {\n        if (/</.test(styleSheet)) {\n            throw new Error(`'<' character is forbidden in styleSheet string: ${styleSheet}`);\n        }\n    }\n    return createStyleSheetInternal(styleSheet);\n}\n/**\n * Creates a `SafeStyleSheet` value by concatenating multiple\n * `SafeStyleSheet`s.\n */\nexport function concatStyleSheets(sheets) {\n    return createStyleSheetInternal(sheets.map(unwrapStyleSheet).join(''));\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,uBAAuB;AAC9B,SAASA,sBAAsB,QAAQ,gCAAgC;AACvE,SAASC,wBAAwB,EAAEC,gBAAgB,QAAS,kCAAkC;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,WAAW,EAAE;EACxC,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACvCP,sBAAsB,CAACI,WAAW,EAAE,CAAC,CAAC;EAC1C;EACA,MAAMI,UAAU,GAAGJ,WAAW,CAAC,CAAC,CAAC;EACjC,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACvC,IAAI,GAAG,CAACE,IAAI,CAACD,UAAU,CAAC,EAAE;MACtB,MAAM,IAAIE,KAAK,CAAC,oDAAoDF,UAAU,EAAE,CAAC;IACrF;EACJ;EACA,OAAOP,wBAAwB,CAACO,UAAU,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,iBAAiBA,CAACC,MAAM,EAAE;EACtC,OAAOX,wBAAwB,CAACW,MAAM,CAACC,GAAG,CAACX,gBAAgB,CAAC,CAACY,IAAI,CAAC,EAAE,CAAC,CAAC;AAC1E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}