{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\AI-SCET Website\\\\aiscet\\\\src\\\\components\\\\Register.jsx\",\n  _s = $RefreshSig$();\n// // RegisterForm.js\n\n// import React from 'react';\n// import { useForm } from 'react-hook-form';\n\n// const Register = () => {\n//   const { register, handleSubmit, formState: { errors } } = useForm();\n\n//   const onSubmit = (data) => {\n//     console.log(data); // Replace with your logic to handle form submission (e.g., API call)\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit(onSubmit)}>\n//       <h2>Register</h2>\n//       <div>\n//         <label>Email</label>\n//         <input\n//           type=\"email\"\n//           {...register('email', {\n//             required: 'Email is required',\n//             pattern: {\n//               value: /^[a-zA-Z0-9._%+-]+@example\\.com$/,\n//               message: 'Invalid email address',\n//             },\n//           })}\n//         />\n//         {errors.email && <p>{errors.email.message}</p>}\n//       </div>\n//       <div>\n//         <label>Password</label>\n//         <input\n//           type=\"password\"\n//           {...register('password', { required: 'Password is required' })}\n//         />\n//         {errors.password && <p>{errors.password.message}</p>}\n//       </div>\n//       <div>\n//         <label>Confirm Password</label>\n//         <input\n//           type=\"password\"\n//           {...register('confirmPassword', {\n//             validate: (value) => value === password || 'The passwords do not match',\n//           })}\n//         />\n//         {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\n//       </div>\n//       <button type=\"submit\">Register</button>\n//     </form>\n//   );\n// };\n\n// export default Register;\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const navigate = useNavigate();\n  const onSubmit = async data => {\n    try {\n      const response = await axios.post(\"http://localhost:3000/register\", data);\n      if (response.data.success) {\n        navigate('/login');\n      }\n    } catch (error) {\n      console.error(\"Error registering\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      className: \"register-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...register(\"name\", {\n            required: \"Name is required\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          ...register(\"email\", {\n            required: \"Email is required\",\n            pattern: {\n              value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\n              message: \"Email must end with @scet.ac.in\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ...register(\"password\", {\n            required: \"Password is required\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"pwQV2/NsLKjYnO5kejJ6t0z6AZ8=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useForm","axios","useNavigate","jsxDEV","_jsxDEV","Register","_s","register","handleSubmit","formState","errors","navigate","onSubmit","data","response","post","success","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","required","name","message","pattern","value","email","password","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/AI-SCET Website/aiscet/src/components/Register.jsx"],"sourcesContent":["// // RegisterForm.js\r\n\r\n// import React from 'react';\r\n// import { useForm } from 'react-hook-form';\r\n\r\n// const Register = () => {\r\n//   const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n//   const onSubmit = (data) => {\r\n//     console.log(data); // Replace with your logic to handle form submission (e.g., API call)\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit(onSubmit)}>\r\n//       <h2>Register</h2>\r\n//       <div>\r\n//         <label>Email</label>\r\n//         <input\r\n//           type=\"email\"\r\n//           {...register('email', {\r\n//             required: 'Email is required',\r\n//             pattern: {\r\n//               value: /^[a-zA-Z0-9._%+-]+@example\\.com$/,\r\n//               message: 'Invalid email address',\r\n//             },\r\n//           })}\r\n//         />\r\n//         {errors.email && <p>{errors.email.message}</p>}\r\n//       </div>\r\n//       <div>\r\n//         <label>Password</label>\r\n//         <input\r\n//           type=\"password\"\r\n//           {...register('password', { required: 'Password is required' })}\r\n//         />\r\n//         {errors.password && <p>{errors.password.message}</p>}\r\n//       </div>\r\n//       <div>\r\n//         <label>Confirm Password</label>\r\n//         <input\r\n//           type=\"password\"\r\n//           {...register('confirmPassword', {\r\n//             validate: (value) => value === password || 'The passwords do not match',\r\n//           })}\r\n//         />\r\n//         {errors.confirmPassword && <p>{errors.confirmPassword.message}</p>}\r\n//       </div>\r\n//       <button type=\"submit\">Register</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default Register;\r\n\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const navigate = useNavigate();\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3000/register\", data);\r\n      if (response.data.success) {\r\n        navigate('/login');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error registering\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"register-form\">\r\n        <h2>Register</h2>\r\n        <div>\r\n          <label>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register(\"name\", { required: \"Name is required\" })}\r\n          />\r\n          {errors.name && <p>{errors.name.message}</p>}\r\n        </div>\r\n        <div>\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            {...register(\"email\", {\r\n              required: \"Email is required\",\r\n              pattern: {\r\n                value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\r\n                message: \"Email must end with @scet.ac.in\",\r\n              },\r\n            })}\r\n          />\r\n          {errors.email && <p>{errors.email.message}</p>}\r\n        </div>\r\n        <div>\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            {...register(\"password\", { required: \"Password is required\" })}\r\n          />\r\n          {errors.password && <p>{errors.password.message}</p>}\r\n        </div>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IACJC,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGV,OAAO,CAAC,CAAC;EACb,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,QAAQ,GAAG,MAAOC,IAAI,IAAK;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,gCAAgC,EAAEF,IAAI,CAAC;MACzE,IAAIC,QAAQ,CAACD,IAAI,CAACG,OAAO,EAAE;QACzBL,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C;EACF,CAAC;EAED,oBACEb,OAAA;IAAKe,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eACjChB,OAAA;MAAMQ,QAAQ,EAAEJ,YAAY,CAACI,QAAQ,CAAE;MAACO,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC/DhB,OAAA;QAAAgB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBpB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,EAAO;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBpB,OAAA;UACEqB,IAAI,EAAC,MAAM;UAAA,GACPlB,QAAQ,CAAC,MAAM,EAAE;YAAEmB,QAAQ,EAAE;UAAmB,CAAC;QAAC;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,EACDd,MAAM,CAACiB,IAAI,iBAAIvB,OAAA;UAAAgB,QAAA,EAAIV,MAAM,CAACiB,IAAI,CAACC;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACNpB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBpB,OAAA;UACEqB,IAAI,EAAC,OAAO;UAAA,GACRlB,QAAQ,CAAC,OAAO,EAAE;YACpBmB,QAAQ,EAAE,mBAAmB;YAC7BG,OAAO,EAAE;cACPC,KAAK,EAAE,kCAAkC;cACzCF,OAAO,EAAE;YACX;UACF,CAAC;QAAC;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EACDd,MAAM,CAACqB,KAAK,iBAAI3B,OAAA;UAAAgB,QAAA,EAAIV,MAAM,CAACqB,KAAK,CAACH;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACNpB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,EAAO;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvBpB,OAAA;UACEqB,IAAI,EAAC,UAAU;UAAA,GACXlB,QAAQ,CAAC,UAAU,EAAE;YAAEmB,QAAQ,EAAE;UAAuB,CAAC;QAAC;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC,EACDd,MAAM,CAACsB,QAAQ,iBAAI5B,OAAA;UAAAgB,QAAA,EAAIV,MAAM,CAACsB,QAAQ,CAACJ;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACNpB,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAClB,EAAA,CAzDID,QAAQ;EAAA,QAKRL,OAAO,EACME,WAAW;AAAA;AAAA+B,EAAA,GANxB5B,QAAQ;AA2Dd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}