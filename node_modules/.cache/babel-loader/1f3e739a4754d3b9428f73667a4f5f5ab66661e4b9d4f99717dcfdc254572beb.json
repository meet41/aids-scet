{"ast":null,"code":"import axios from 'axios';\nexport const addImage = async (imageFile, metadata) => {\n  const formData = new FormData();\n  formData.append('image', imageFile);\n  formData.append('metadata', JSON.stringify(metadata));\n  try {\n    const response = await axios.post('/api/images', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const addResult = async (resultFile, metadata) => {\n  const formData = new FormData();\n  formData.append('result', resultFile);\n  formData.append('metadata', JSON.stringify(metadata));\n  try {\n    const response = await axios.post('/api/results', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const addSyllabus = async (syllabusFile, metadata) => {\n  const formData = new FormData();\n  formData.append('syllabus', syllabusFile);\n  formData.append('metadata', JSON.stringify(metadata));\n  try {\n    const response = await axios.post('/api/syllabus', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const addEvent = async (eventFile, metadata) => {\n  const formData = new FormData();\n  formData.append('event', eventFile);\n  formData.append('metadata', JSON.stringify(metadata));\n  try {\n    const response = await axios.post('/api/events', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","addImage","imageFile","metadata","formData","FormData","append","JSON","stringify","response","post","headers","data","error","addResult","resultFile","addSyllabus","syllabusFile","addEvent","eventFile"],"sources":["E:/HTML/Udemy_Full Stack Web/AI-SCET Website/aiscet/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const addImage = async (imageFile, metadata) => {\r\n  const formData = new FormData();\r\n  formData.append('image', imageFile);\r\n  formData.append('metadata', JSON.stringify(metadata));\r\n\r\n  try {\r\n    const response = await axios.post('/api/images', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addResult = async (resultFile, metadata) => {\r\n  const formData = new FormData();\r\n  formData.append('result', resultFile);\r\n  formData.append('metadata', JSON.stringify(metadata));\r\n\r\n  try {\r\n    const response = await axios.post('/api/results', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addSyllabus = async (syllabusFile, metadata) => {\r\n  const formData = new FormData();\r\n  formData.append('syllabus', syllabusFile);\r\n  formData.append('metadata', JSON.stringify(metadata));\r\n\r\n  try {\r\n    const response = await axios.post('/api/syllabus', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addEvent = async (eventFile, metadata) => {\r\n  const formData = new FormData();\r\n  formData.append('event', eventFile);\r\n  formData.append('metadata', JSON.stringify(metadata));\r\n\r\n  try {\r\n    const response = await axios.post('/api/events', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,SAAS,EAAEC,QAAQ,KAAK;EACrD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,SAAS,CAAC;EACnCE,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC;EAErD,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,aAAa,EAAEN,QAAQ,EAAE;MACzDO,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,UAAU,EAAEZ,QAAQ,KAAK;EACvD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAES,UAAU,CAAC;EACrCX,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC;EAErD,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,cAAc,EAAEN,QAAQ,EAAE;MAC1DO,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,MAAAA,CAAOC,YAAY,EAAEd,QAAQ,KAAK;EAC3D,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEW,YAAY,CAAC;EACzCb,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC;EAErD,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,eAAe,EAAEN,QAAQ,EAAE;MAC3DO,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMK,QAAQ,GAAG,MAAAA,CAAOC,SAAS,EAAEhB,QAAQ,KAAK;EACrD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEa,SAAS,CAAC;EACnCf,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC;EAErD,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,aAAa,EAAEN,QAAQ,EAAE;MACzDO,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}