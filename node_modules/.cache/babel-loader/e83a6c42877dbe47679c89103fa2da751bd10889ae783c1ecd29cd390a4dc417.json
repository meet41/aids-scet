{"ast":null,"code":"var _jsxFileName = \"E:\\\\HTML\\\\Udemy_Full Stack Web\\\\AI-SCET Website\\\\aiscet\\\\src\\\\auth\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\n// import axios from 'axios';\n// import \"./Login.css\";\n// import { useNavigate } from 'react-router-dom';\n\n// const Login = () => {\n//   const {\n//     register,\n//     handleSubmit,\n//     formState: { errors },\n//   } = useForm();\n//   const navigate = useNavigate();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       const response = await axios.post(\"http://localhost:3000/auth/login\", data);\n//       if (response.data.success) {\n//         // Handle successful login\n//         sessionStorage.setItem('user', JSON.stringify(response.data.user));\n//         navigate('/manage');\n//       } else {\n//         // Redirect to register page if user does not exist\n//         navigate('/register');\n//       }\n//     } catch (error) {\n//       console.error(\"Error logging in\", error);\n//     }\n//   };\n\n//   const handleGoogleSuccess = async (response) => {\n//     try {\n//       const googleData = { token: response.credential };\n//       const result = await axios.post(\"http://localhost:3000/google-login\", googleData);\n//       if (result.data.success) {\n//         // Handle successful login\n//         sessionStorage.setItem('user', JSON.stringify(result.data.user));\n//         navigate('/manage');\n//       } else {\n//         // Redirect to register page if user does not exist\n//         navigate('/register');\n//       }\n//     } catch (error) {\n//       console.error(\"Google login error\", error);\n//     }\n//   };\n\n//   const handleGoogleFailure = (error) => {\n//     console.error(\"Google login failed\", error);\n//   };\n\n//   return (\n//     <div className=\"login-container\">\n//       <form onSubmit={handleSubmit(onSubmit)} className=\"login-form\">\n//         <h2>Login</h2>\n//         <div>\n//           <label>Email</label>\n//           <input\n//             type=\"email\"\n//             {...register(\"email\", {\n//               required: \"Email is required\",\n//               pattern: {\n//                 value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\n//                 message: \"Email must end with @scet.ac.in\",\n//               },\n//             })}\n//           />\n//           {errors.email && <p>{errors.email.message}</p>}\n//         </div>\n//         <div>\n//           <label>Password</label>\n//           <input\n//             type=\"password\"\n//             {...register(\"password\", { required: \"Password is required\" })}\n//           />\n//           {errors.password && <p>{errors.password.message}</p>}\n//         </div>\n//         <button type=\"submit\">Login</button>\n//         <GoogleOAuthProvider clientId=\"313031444121-odnvb0dj5sfju6rovi1i6jbsl12o50la.apps.googleusercontent.com\">\n//           <GoogleLogin\n//             onSuccess={handleGoogleSuccess}\n//             onFailure={handleGoogleFailure}\n//             buttonText=\"Login with Google\"\n//           />\n//         </GoogleOAuthProvider>\n//       </form>\n//     </div>\n//   );\n// };\n// export default Login;\n\n// Login.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function Login() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState(null);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post('http://localhost:3000/login', {\n//         email,\n//         password,\n//       });\n//       if (response.status === 200) {\n//         window.location.href = '/Manage';\n//       }\n//     } catch (err) {\n//       setError(err.response?.data?.message || 'An error occurred');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={handleSubmit}>\n//         <label>Email:</label>\n//         <input\n//           type=\"email\"\n//           value={email}\n//           formNoValidate\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//         <br />\n//         <label>Password:</label>\n//         <input\n//           type=\"password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//         <br />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       {error && <div style={{ color: 'red' }}>{error}</div>}\n//     </div>\n//   );\n// }\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3000/login', formData);\n      console.log(response.data);\n    } catch (err) {\n      setError('Login failed. Please check your credentials and try again.');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [\"Enter Email :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: e => setFormData({\n          ...formData,\n          email: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 12\n      }, this), \"Enter Password :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: e => setFormData({\n          ...formData,\n          password: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"lgSl22gvGHZuMMTd3FfHBkf6fx4=\");\n_c = Login;\nexport default Login;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const Login = () => {\n//   const [formData, setFormData] = useState({\n//     email: '',\n//     password: ''\n//   });\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData(prevState => ({\n//       ...prevState,\n//       [name]: value\n//     }));\n//   };\n\n//   const onSubmit = async (event) => {\n//     event.preventDefault();\n\n//     try {\n//       console.log('Form Data:', formData); // Debugging line\n//       const response = await axios.post('http://localhost:3000/login', {\n//         email: formData.email,\n//         password: formData.password\n//       });\n//       console.log('Login successful:', response.data);\n//       // Handle successful login\n//     } catch (error) {\n//       console.error('Error logging in:', error);\n//       // Handle login error\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={onSubmit}>\n//       <label>\n//         Email:\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={formData.email}\n//           onChange={handleChange}\n//           required\n//         />\n//       </label>\n//       <label>\n//         Password:\n//         <input\n//           type=\"password\"\n//           name=\"password\"\n//           value={formData.password}\n//           onChange={handleChange}\n//           required\n//         />\n//       </label>\n//       <button type=\"submit\">Login</button>\n//     </form>\n//   );\n// };\n\n// export default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","error","setError","handleSubmit","e","preventDefault","response","post","console","log","data","err","children","onSubmit","type","name","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["E:/HTML/Udemy_Full Stack Web/AI-SCET Website/aiscet/src/auth/Login.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import { useForm } from \"react-hook-form\";\r\n// import { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\r\n// import axios from 'axios';\r\n// import \"./Login.css\";\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const Login = () => {\r\n//   const {\r\n//     register,\r\n//     handleSubmit,\r\n//     formState: { errors },\r\n//   } = useForm();\r\n//   const navigate = useNavigate();\r\n\r\n//   const onSubmit = async (data) => {\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:3000/auth/login\", data);\r\n//       if (response.data.success) {\r\n//         // Handle successful login\r\n//         sessionStorage.setItem('user', JSON.stringify(response.data.user));\r\n//         navigate('/manage');\r\n//       } else {\r\n//         // Redirect to register page if user does not exist\r\n//         navigate('/register');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error logging in\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleGoogleSuccess = async (response) => {\r\n//     try {\r\n//       const googleData = { token: response.credential };\r\n//       const result = await axios.post(\"http://localhost:3000/google-login\", googleData);\r\n//       if (result.data.success) {\r\n//         // Handle successful login\r\n//         sessionStorage.setItem('user', JSON.stringify(result.data.user));\r\n//         navigate('/manage');\r\n//       } else {\r\n//         // Redirect to register page if user does not exist\r\n//         navigate('/register');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Google login error\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleGoogleFailure = (error) => {\r\n//     console.error(\"Google login failed\", error);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-container\">\r\n//       <form onSubmit={handleSubmit(onSubmit)} className=\"login-form\">\r\n//         <h2>Login</h2>\r\n//         <div>\r\n//           <label>Email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             {...register(\"email\", {\r\n//               required: \"Email is required\",\r\n//               pattern: {\r\n//                 value: /^[a-zA-Z0-9._%+-]+@scet\\.ac\\.in$/,\r\n//                 message: \"Email must end with @scet.ac.in\",\r\n//               },\r\n//             })}\r\n//           />\r\n//           {errors.email && <p>{errors.email.message}</p>}\r\n//         </div>\r\n//         <div>\r\n//           <label>Password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             {...register(\"password\", { required: \"Password is required\" })}\r\n//           />\r\n//           {errors.password && <p>{errors.password.message}</p>}\r\n//         </div>\r\n//         <button type=\"submit\">Login</button>\r\n//         <GoogleOAuthProvider clientId=\"313031444121-odnvb0dj5sfju6rovi1i6jbsl12o50la.apps.googleusercontent.com\">\r\n//           <GoogleLogin\r\n//             onSuccess={handleGoogleSuccess}\r\n//             onFailure={handleGoogleFailure}\r\n//             buttonText=\"Login with Google\"\r\n//           />\r\n//         </GoogleOAuthProvider>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n// export default Login;\r\n\r\n\r\n            // Login.js\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// function Login() {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [error, setError] = useState(null);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await axios.post('http://localhost:3000/login', {\r\n//         email,\r\n//         password,\r\n//       });\r\n//       if (response.status === 200) {\r\n//         window.location.href = '/Manage';\r\n//       }\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'An error occurred');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <label>Email:</label>\r\n//         <input\r\n//           type=\"email\"\r\n//           value={email}\r\n//           formNoValidate\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           required\r\n//         />\r\n//         <br />\r\n//         <label>Password:</label>\r\n//         <input\r\n//           type=\"password\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           required\r\n//         />\r\n//         <br />\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//       {error && <div style={{ color: 'red' }}>{error}</div>}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/login', formData);\r\n      console.log(response.data);\r\n    } catch (err) {\r\n      setError('Login failed. Please check your credentials and try again.');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        Enter Email : \r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        /> <br />\r\n        Enter Password : \r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={(e) => setFormData({ ...formData, password: e.target.value })}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      {error && <div style={{ color: 'red' }}>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Login = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     email: '',\r\n//     password: ''\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData(prevState => ({\r\n//       ...prevState,\r\n//       [name]: value\r\n//     }));\r\n//   };\r\n\r\n//   const onSubmit = async (event) => {\r\n//     event.preventDefault();\r\n    \r\n//     try {\r\n//       console.log('Form Data:', formData); // Debugging line\r\n//       const response = await axios.post('http://localhost:3000/login', {\r\n//         email: formData.email,\r\n//         password: formData.password\r\n//       });\r\n//       console.log('Login successful:', response.data);\r\n//       // Handle successful login\r\n//     } catch (error) {\r\n//       console.error('Error logging in:', error);\r\n//       // Handle login error\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={onSubmit}>\r\n//       <label>\r\n//         Email:\r\n//         <input\r\n//           type=\"email\"\r\n//           name=\"email\"\r\n//           value={formData.email}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//       </label>\r\n//       <label>\r\n//         Password:\r\n//         <input\r\n//           type=\"password\"\r\n//           name=\"password\"\r\n//           value={formData.password}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//       </label>\r\n//       <button type=\"submit\">Login</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,6BAA6B,EAAEV,QAAQ,CAAC;MAC1EW,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZT,QAAQ,CAAC,4DAA4D,CAAC;MACtEM,OAAO,CAACP,KAAK,CAACU,GAAG,CAAC;IACpB;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAMmB,QAAQ,EAAEV,YAAa;MAAAS,QAAA,GAAC,eAE5B,eAAAlB,OAAA;QACEoB,IAAI,EAAC,OAAO;QACZC,IAAI,EAAC,OAAO;QACZC,KAAK,EAAEnB,QAAQ,CAACE,KAAM;QACtBkB,QAAQ,EAAGb,CAAC,IAAKN,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEE,KAAK,EAAEK,CAAC,CAACc,MAAM,CAACF;QAAM,CAAC,CAAE;QACrEG,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,KAAC,eAAA7B,OAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,oBAET,eAAA7B,OAAA;QACEoB,IAAI,EAAC,UAAU;QACfC,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEnB,QAAQ,CAACG,QAAS;QACzBiB,QAAQ,EAAGb,CAAC,IAAKN,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEG,QAAQ,EAAEI,CAAC,CAACc,MAAM,CAACF;QAAM,CAAC,CAAE;QACxEG,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF7B,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,EACNtB,KAAK,iBAAIP,OAAA;MAAK8B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAb,QAAA,EAAEX;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA1CID,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AA4CX,eAAeA,KAAK;;AAGpB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}