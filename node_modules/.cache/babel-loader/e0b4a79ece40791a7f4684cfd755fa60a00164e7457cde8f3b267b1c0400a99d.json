{"ast":null,"code":"/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev.js';\nimport { ensureTokenIsValid, secretToken } from './secrets.js';\nimport { getTrustedTypes, getTrustedTypesPolicy } from './trusted_types.js';\n/**\n * Runtime implementation of `TrustedScript` in browswers that don't support it.\n * script element.\n */\nclass ScriptImpl {\n  constructor(script, token) {\n    ensureTokenIsValid(token);\n    this.privateDoNotAccessOrElseWrappedScript = script;\n  }\n  toString() {\n    return this.privateDoNotAccessOrElseWrappedScript.toString();\n  }\n}\nfunction createTrustedScriptOrPolyfill(script, trusted) {\n  return trusted !== null && trusted !== void 0 ? trusted : new ScriptImpl(script, secretToken);\n}\nconst GlobalTrustedScript = typeof window !== 'undefined' ? window.TrustedScript : undefined;\n/**\n * Also exports the constructor so that instanceof checks work.\n */\nexport const SafeScript = GlobalTrustedScript !== null && GlobalTrustedScript !== void 0 ? GlobalTrustedScript : ScriptImpl;\n/**\n * Builds a new `SafeScript` from the given string, without enforcing\n * safety guarantees. It may cause side effects by creating a Trusted Types\n * policy. This shouldn't be exposed to application developers, and must only be\n * used as a step towards safe builders or safe constants.\n */\nexport function createScriptInternal(script) {\n  var _a;\n  /** @noinline */\n  const noinlineScript = script;\n  return createTrustedScriptOrPolyfill(noinlineScript, (_a = getTrustedTypesPolicy()) === null || _a === void 0 ? void 0 : _a.createScript(noinlineScript));\n}\n/**\n * An empty `SafeScript` constant.\n * Unlike the functions above, using this will not create a policy.\n */\nexport const EMPTY_SCRIPT = /* #__PURE__ */(() => {\n  var _a;\n  return createTrustedScriptOrPolyfill('', (_a = getTrustedTypes()) === null || _a === void 0 ? void 0 : _a.emptyScript);\n})();\n/**\n * Checks if the given value is a `SafeScript` instance.\n */\nexport function isScript(value) {\n  var _a;\n  return ((_a = getTrustedTypes()) === null || _a === void 0 ? void 0 : _a.isScript(value)) || value instanceof ScriptImpl;\n}\n/**\n * Returns the value of the passed `SafeScript` object while ensuring it\n * has the correct type.\n *\n * Returns a native `TrustedScript` or a string if Trusted Types are disabled.\n */\nexport function unwrapScript(value) {\n  var _a;\n  if ((_a = getTrustedTypes()) === null || _a === void 0 ? void 0 : _a.isScript(value)) {\n    return value;\n  } else if (value instanceof ScriptImpl) {\n    return value.privateDoNotAccessOrElseWrappedScript;\n  } else {\n    let message = '';\n    if (process.env.NODE_ENV !== 'production') {\n      message = 'Unexpected type when unwrapping SafeScript';\n    }\n    throw new Error(message);\n  }\n}","map":{"version":3,"names":["ensureTokenIsValid","secretToken","getTrustedTypes","getTrustedTypesPolicy","ScriptImpl","constructor","script","token","privateDoNotAccessOrElseWrappedScript","toString","createTrustedScriptOrPolyfill","trusted","GlobalTrustedScript","window","TrustedScript","undefined","SafeScript","createScriptInternal","_a","noinlineScript","createScript","EMPTY_SCRIPT","emptyScript","isScript","value","unwrapScript","message","process","env","NODE_ENV","Error"],"sources":["E:/HTML/Udemy_Full Stack Web/AI-SCET Website/aiscet/node_modules/safevalues/dist/mjs/internals/script_impl.js"],"sourcesContent":["/**\n * @license\n * SPDX-License-Identifier: Apache-2.0\n */\nimport '../environment/dev.js';\nimport { ensureTokenIsValid, secretToken } from './secrets.js';\nimport { getTrustedTypes, getTrustedTypesPolicy } from './trusted_types.js';\n/**\n * Runtime implementation of `TrustedScript` in browswers that don't support it.\n * script element.\n */\nclass ScriptImpl {\n    constructor(script, token) {\n        ensureTokenIsValid(token);\n        this.privateDoNotAccessOrElseWrappedScript = script;\n    }\n    toString() {\n        return this.privateDoNotAccessOrElseWrappedScript.toString();\n    }\n}\nfunction createTrustedScriptOrPolyfill(script, trusted) {\n    return (trusted !== null && trusted !== void 0 ? trusted : new ScriptImpl(script, secretToken));\n}\nconst GlobalTrustedScript = typeof window !== 'undefined' ? window.TrustedScript : undefined;\n/**\n * Also exports the constructor so that instanceof checks work.\n */\nexport const SafeScript = (GlobalTrustedScript !== null && GlobalTrustedScript !== void 0 ? GlobalTrustedScript : ScriptImpl);\n/**\n * Builds a new `SafeScript` from the given string, without enforcing\n * safety guarantees. It may cause side effects by creating a Trusted Types\n * policy. This shouldn't be exposed to application developers, and must only be\n * used as a step towards safe builders or safe constants.\n */\nexport function createScriptInternal(script) {\n    var _a;\n    /** @noinline */\n    const noinlineScript = script;\n    return createTrustedScriptOrPolyfill(noinlineScript, (_a = getTrustedTypesPolicy()) === null || _a === void 0 ? void 0 : _a.createScript(noinlineScript));\n}\n/**\n * An empty `SafeScript` constant.\n * Unlike the functions above, using this will not create a policy.\n */\nexport const EMPTY_SCRIPT = /* #__PURE__ */ (() => { var _a; return createTrustedScriptOrPolyfill('', (_a = getTrustedTypes()) === null || _a === void 0 ? void 0 : _a.emptyScript); })();\n/**\n * Checks if the given value is a `SafeScript` instance.\n */\nexport function isScript(value) {\n    var _a;\n    return ((_a = getTrustedTypes()) === null || _a === void 0 ? void 0 : _a.isScript(value)) || value instanceof ScriptImpl;\n}\n/**\n * Returns the value of the passed `SafeScript` object while ensuring it\n * has the correct type.\n *\n * Returns a native `TrustedScript` or a string if Trusted Types are disabled.\n */\nexport function unwrapScript(value) {\n    var _a;\n    if ((_a = getTrustedTypes()) === null || _a === void 0 ? void 0 : _a.isScript(value)) {\n        return value;\n    }\n    else if (value instanceof ScriptImpl) {\n        return value.privateDoNotAccessOrElseWrappedScript;\n    }\n    else {\n        let message = '';\n        if (process.env.NODE_ENV !== 'production') {\n            message = 'Unexpected type when unwrapping SafeScript';\n        }\n        throw new Error(message);\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,uBAAuB;AAC9B,SAASA,kBAAkB,EAAEC,WAAW,QAAQ,cAAc;AAC9D,SAASC,eAAe,EAAEC,qBAAqB,QAAQ,oBAAoB;AAC3E;AACA;AACA;AACA;AACA,MAAMC,UAAU,CAAC;EACbC,WAAWA,CAACC,MAAM,EAAEC,KAAK,EAAE;IACvBP,kBAAkB,CAACO,KAAK,CAAC;IACzB,IAAI,CAACC,qCAAqC,GAAGF,MAAM;EACvD;EACAG,QAAQA,CAAA,EAAG;IACP,OAAO,IAAI,CAACD,qCAAqC,CAACC,QAAQ,CAAC,CAAC;EAChE;AACJ;AACA,SAASC,6BAA6BA,CAACJ,MAAM,EAAEK,OAAO,EAAE;EACpD,OAAQA,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAGA,OAAO,GAAG,IAAIP,UAAU,CAACE,MAAM,EAAEL,WAAW,CAAC;AAClG;AACA,MAAMW,mBAAmB,GAAG,OAAOC,MAAM,KAAK,WAAW,GAAGA,MAAM,CAACC,aAAa,GAAGC,SAAS;AAC5F;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAIJ,mBAAmB,KAAK,IAAI,IAAIA,mBAAmB,KAAK,KAAK,CAAC,GAAGA,mBAAmB,GAAGR,UAAW;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASa,oBAAoBA,CAACX,MAAM,EAAE;EACzC,IAAIY,EAAE;EACN;EACA,MAAMC,cAAc,GAAGb,MAAM;EAC7B,OAAOI,6BAA6B,CAACS,cAAc,EAAE,CAACD,EAAE,GAAGf,qBAAqB,CAAC,CAAC,MAAM,IAAI,IAAIe,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,YAAY,CAACD,cAAc,CAAC,CAAC;AAC7J;AACA;AACA;AACA;AACA;AACA,OAAO,MAAME,YAAY,GAAG,eAAgB,CAAC,MAAM;EAAE,IAAIH,EAAE;EAAE,OAAOR,6BAA6B,CAAC,EAAE,EAAE,CAACQ,EAAE,GAAGhB,eAAe,CAAC,CAAC,MAAM,IAAI,IAAIgB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACI,WAAW,CAAC;AAAE,CAAC,EAAE,CAAC;AACzL;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAACC,KAAK,EAAE;EAC5B,IAAIN,EAAE;EACN,OAAO,CAAC,CAACA,EAAE,GAAGhB,eAAe,CAAC,CAAC,MAAM,IAAI,IAAIgB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACK,QAAQ,CAACC,KAAK,CAAC,KAAKA,KAAK,YAAYpB,UAAU;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASqB,YAAYA,CAACD,KAAK,EAAE;EAChC,IAAIN,EAAE;EACN,IAAI,CAACA,EAAE,GAAGhB,eAAe,CAAC,CAAC,MAAM,IAAI,IAAIgB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACK,QAAQ,CAACC,KAAK,CAAC,EAAE;IAClF,OAAOA,KAAK;EAChB,CAAC,MACI,IAAIA,KAAK,YAAYpB,UAAU,EAAE;IAClC,OAAOoB,KAAK,CAAChB,qCAAqC;EACtD,CAAC,MACI;IACD,IAAIkB,OAAO,GAAG,EAAE;IAChB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvCH,OAAO,GAAG,4CAA4C;IAC1D;IACA,MAAM,IAAII,KAAK,CAACJ,OAAO,CAAC;EAC5B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}